filter(validity_right <= 1)%>%
mutate(target = case_when(gaze_point_x >= target_x_min&gaze_point_x <= target_x_max&gaze_point_y >= target_y_min&gaze_point_y <= target_y_max~TRUE,
TRUE~FALSE))
#Create trial language column to describe the language in which the babies were tested
kbh_data_clean <- kbh_data_clean %>%
ungroup()%>%
group_by(studio_test_name, eng_exp, fre_exp)%>%
mutate(trial_lang = case_when(str_detect(studio_test_name,"E")~ "english",
str_detect(studio_test_name, "F")~ "french")) %>%
mutate(exp_to_target_lang = case_when(trial_lang == "english" ~ eng_exp,
trial_lang == "french" ~ fre_exp))
#1. Proportion looking to target
prop_looking <- kbh_data_clean %>%
filter(noun_onset>= 360 & noun_onset <= 3000)%>%
group_by(recording_name, subject_id, trial_number, media_name, age_months, exp_to_target_lang)%>%
summarise(samples_total=sum(target==TRUE, target==FALSE ),
samples_target=sum(target))%>%
mutate(prop_looking= samples_target/samples_total) %>%
ungroup()
#2. Proportion looking difference
#3. Number of fixations
### Total number of fixations to the target during the window of analyses
fixations_total <- kbh_data_clean  %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
filter(target == TRUE) %>%
group_by(recording_name, subject_id, trial_number, media_name) %>%
summarise(looking_to_target = sum(target==TRUE))
#4. Correct first shift to target
#5. Reaction time
distractor_initial_trials <- kbh_data_clean %>%
filter(noun_onset >= 360 & noun_onset <= 1800)%>%
mutate(initial_trial = case_when(
noun_onset >=360 & noun_onset <=400 & target==FALSE ~ "distractor_initial",
noun_onset >=360 & noun_onset <=400 & target==TRUE ~ "target_initial")
) %>%
group_by(recording_name, subject_id, trial_number, media_name, initial_trial) %>%
summarise() %>%
filter(initial_trial =="distractor_initial")
RT <- full_join (kbh_data_clean, distractor_initial_trials) %>%
filter(initial_trial=="distractor_initial") %>%
filter(noun_onset >= 360 & noun_onset <= 1800)%>%
mutate(first_true = ifelse(target == TRUE & lag(target) == FALSE, 1, 0)) %>%
filter(first_true == 1) %>%
group_by(recording_name, subject_id, trial_number, media_name,noun_onset) %>%
summarise() %>%
arrange(recording_name, trial_number, by_group = T) %>%
mutate(number_of_trial_instance = row_number()) %>%  #I only want to keep the first instance of switch because I am only interested in the latency of the very first switch towards target.
filter(number_of_trial_instance == 1) %>%
mutate(latency_to_switch = noun_onset - 360)
#6. Total number of switches between AOIs
number_of_switches<- kbh_data_clean  %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
mutate(AOI_switches = ifelse(target == TRUE & lag(target) == FALSE | target == FALSE & lag(target) == TRUE, 1, 0))%>%
filter(AOI_switches == 1) %>%
group_by(recording_name, subject_id, trial_number, media_name) %>%
summarise(total_aoi_switches = sum(AOI_switches))
#7. Mean latency of refixation during trial
#8. Mean fixation duration during trial
#9. Proportion of fixation duration
#10. Pupil dilation
#11. Duration of first look
### Duration of the first look recorded toward a particular AOI.
first_look_duration <- kbh_data_clean  %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
mutate(AOI_switches = ifelse(target == TRUE & lag(target) == FALSE | target == FALSE & lag(target) == TRUE, 1, 0)) %>%
filter(AOI_switches == 1) %>%
group_by(recording_name, subject_id, trial_number, media_name,noun_onset) %>%
summarise() %>%
arrange(recording_name, trial_number, by_group = T) %>%
mutate(number_of_trial_instance = row_number()) %>%  #I only want to keep the first instance of switch because I am only interested in the duration of the very first look during the trial analyses window.
filter(number_of_trial_instance == 1) %>%
mutate(first_look_dur = noun_onset - 360)
data_new_dvs<- kbh_data_clean %>%
select(recording_name, media_name, subject_id, trial_number, age_months, exp_to_target_lang)
data_new_dvs<- full_join(data_new_dvs, prop_looking, by=(c("recording_name", "subject_id", "trial_number", "media_name")))
View(data_new_dvs)
data_new_dvs<- full_join(data_new_dvs, fixations_total, by=(c("recording_name", "subject_id", "trial_number", "media_name")))
data_new_dvs<- kbh_data_clean %>%
select(recording_name, media_name, subject_id, trial_number, age_months, exp_to_target_lang)
data_new_dvs<- full_join(data_new_dvs, prop_looking, by=(c("recording_name", "subject_id", "trial_number", "media_name")))
data_new_dvs<- full_join(data_new_dvs, fixations_total, by=(c("recording_name", "subject_id", "trial_number", "media_name")))
data_new_dvs<- full_join(data_new_dvs, RT, by=(c("recording_name", "subject_id", "trial_number", "media_name")))
data_new_dvs<- full_join(data_new_dvs, number_of_switches, by=(c("recording_name", "subject_id", "trial_number", "media_name")))
data_new_dvs<- full_join(data_new_dvs, first_look_duration, by=(c("recording_name", "subject_id", "trial_number", "media_name")))
install.packages("corrplot")
library(Hmsic)
library(Hmisc)
library(corrplot)
kbh_correlation <- rcorr(as.matrix(data_new_dvs))
kbh_correlation <- cor(data_new_dvs)
?cor
kbh_correlation <- cor(x=data_new_dvs, use="complete.obs")
View(data_new_dvs)
library(here)
library(dplyr)
library(stringr)
library(Hmisc)
library(corrplot)
load(here("clean_data/arch_final.Rda"))
kbh_data_clean <- arch_final%>%
group_by(studio_project_name, studio_test_name, trial_number, recording_name)%>%
mutate(trial_from_zero = recording_timestamp-min(recording_timestamp))%>%
group_by(studio_project_name)%>%
mutate(noun_onset = case_when(studio_project_name=="CompMix-36"~trial_from_zero-3000, #Substracting noun onset to normalize
studio_project_name=="LearnMix-36"~trial_from_zero-4500,
studio_project_name=="Mix-20"~trial_from_zero-5400,
studio_project_name=="Mix-14"~trial_from_zero-5400,
studio_project_name=="CogMisp-24"~trial_from_zero-1500))%>%
ungroup()%>%
rename(target_side=target, distractor_side=distractor,
gaze_point_x= gaze_point_x_adc_spx,
gaze_point_y = gaze_point_y_adc_spx)%>%
filter(gaze_point_x>=0 & gaze_point_x<= 1920)%>% #keeps only observations that are in the screen
filter(gaze_point_y>=0 & gaze_point_y<=1200)%>%
filter(!is.na(gaze_point_x))%>% #gets rid of the observations where tobii didn't get any reading
filter(!is.na(gaze_point_y))%>%
filter(!is.na(validity_left)) %>%
filter(!is.na(validity_right)) %>%
filter(validity_left<= 1)%>%
filter(validity_right <= 1)%>%
mutate(target = case_when(gaze_point_x >= target_x_min&gaze_point_x <= target_x_max&gaze_point_y >= target_y_min&gaze_point_y <= target_y_max~TRUE,
TRUE~FALSE))
#Create trial language column to describe the language in which the babies were tested
kbh_data_clean <- kbh_data_clean %>%
ungroup()%>%
group_by(studio_test_name, eng_exp, fre_exp)%>%
mutate(trial_lang = case_when(str_detect(studio_test_name,"E")~ "english",
str_detect(studio_test_name, "F")~ "french")) %>%
mutate(exp_to_target_lang = case_when(trial_lang == "english" ~ eng_exp,
trial_lang == "french" ~ fre_exp))
#1. Proportion looking to target
prop_looking <- kbh_data_clean %>%
filter(noun_onset>= 360 & noun_onset <= 3000)%>%
group_by(recording_name, subject_id, trial_number, media_name, age_months, exp_to_target_lang)%>%
summarise(samples_total=sum(target==TRUE, target==FALSE ),
samples_target=sum(target))%>%
mutate(prop_looking= samples_target/samples_total) %>%
ungroup()
#2. Proportion looking difference
#3. Number of fixations
### Total number of fixations to the target during the window of analyses
fixations_total <- kbh_data_clean  %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
filter(target == TRUE) %>%
group_by(recording_name, subject_id, trial_number, media_name) %>%
summarise(looking_to_target = sum(target==TRUE))
#4. Correct first shift to target
#5. Reaction time
distractor_initial_trials <- kbh_data_clean %>%
filter(noun_onset >= 360 & noun_onset <= 1800)%>%
mutate(initial_trial = case_when(
noun_onset >=360 & noun_onset <=400 & target==FALSE ~ "distractor_initial",
noun_onset >=360 & noun_onset <=400 & target==TRUE ~ "target_initial")
) %>%
group_by(recording_name, subject_id, trial_number, media_name, initial_trial) %>%
summarise() %>%
filter(initial_trial =="distractor_initial")
RT <- full_join (kbh_data_clean, distractor_initial_trials) %>%
filter(initial_trial=="distractor_initial") %>%
filter(noun_onset >= 360 & noun_onset <= 1800)%>%
mutate(first_true = ifelse(target == TRUE & lag(target) == FALSE, 1, 0)) %>%
filter(first_true == 1) %>%
group_by(recording_name, subject_id, trial_number, media_name,noun_onset) %>%
summarise() %>%
arrange(recording_name, trial_number, by_group = T) %>%
mutate(number_of_trial_instance = row_number()) %>%  #I only want to keep the first instance of switch because I am only interested in the latency of the very first switch towards target.
filter(number_of_trial_instance == 1) %>%
mutate(latency_to_switch = noun_onset - 360)
#6. Total number of switches between AOIs
number_of_switches<- kbh_data_clean  %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
mutate(AOI_switches = ifelse(target == TRUE & lag(target) == FALSE | target == FALSE & lag(target) == TRUE, 1, 0))%>%
filter(AOI_switches == 1) %>%
group_by(recording_name, subject_id, trial_number, media_name) %>%
summarise(total_aoi_switches = sum(AOI_switches))
#7. Mean latency of refixation during trial
#8. Mean fixation duration during trial
#9. Proportion of fixation duration
#10. Pupil dilation
#11. Duration of first look
### Duration of the first look recorded toward a particular AOI.
first_look_duration <- kbh_data_clean  %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
mutate(AOI_switches = ifelse(target == TRUE & lag(target) == FALSE | target == FALSE & lag(target) == TRUE, 1, 0)) %>%
filter(AOI_switches == 1) %>%
group_by(recording_name, subject_id, trial_number, media_name,noun_onset) %>%
summarise() %>%
arrange(recording_name, trial_number, by_group = T) %>%
mutate(number_of_trial_instance = row_number()) %>%  #I only want to keep the first instance of switch because I am only interested in the duration of the very first look during the trial analyses window.
filter(number_of_trial_instance == 1) %>%
mutate(first_look_dur = noun_onset - 360)
View(prop_looking)
View(fixations_total)
View(RT)
View(number_of_switches)
View(first_look_duration)
View(prop_looking)
View(fixations_total)
View(distractor_initial_trials)
View(RT)
View(number_of_switches)
View(first_look_duration)
#1)
prop_looking_c<- prop_looking %>%
select(recording_name, subject_id, trial_number, media_name, prop_looking)
#2)
fixations_total_c<- fixations_total %>%
select(recording_name, subject_id, trial_number, media_name, looking_to_target)
#3)
RT_c<- RT %>%
select(recording_name, subject_id, trial_number, media_name, latency_to_switch)
#4)
number_of_switches_c<- number_of_switches %>%
select(recording_name, subject_id, trial_number, media_name, total_aoi_switches)
#5)
first_look_duration_c<- first_look_duration %>%
select(recording_name, subject_id, trial_number, media_name, first_look_dur)
data_new_dvs<- kbh_data_clean %>%
select(recording_name, media_name, subject_id, trial_number, age_months, exp_to_target_lang)
data_new_dvs<- full_join(data_new_dvs, prop_looking, by=(c("recording_name", "subject_id", "trial_number", "media_name")))
data_new_dvs<- full_join(data_new_dvs, fixations_total, by=(c("recording_name", "subject_id", "trial_number", "media_name")))
data_new_dvs<- full_join(data_new_dvs, RT, by=(c("recording_name", "subject_id", "trial_number", "media_name")))
data_new_dvs<- full_join(data_new_dvs, number_of_switches, by=(c("recording_name", "subject_id", "trial_number", "media_name")))
library(here)
library(dplyr)
library(stringr)
library(Hmisc)
library(corrplot)
load(here("clean_data/arch_final.Rda"))
kbh_data_clean <- arch_final%>%
group_by(studio_project_name, studio_test_name, trial_number, recording_name)%>%
mutate(trial_from_zero = recording_timestamp-min(recording_timestamp))%>%
group_by(studio_project_name)%>%
mutate(noun_onset = case_when(studio_project_name=="CompMix-36"~trial_from_zero-3000, #Substracting noun onset to normalize
studio_project_name=="LearnMix-36"~trial_from_zero-4500,
studio_project_name=="Mix-20"~trial_from_zero-5400,
studio_project_name=="Mix-14"~trial_from_zero-5400,
studio_project_name=="CogMisp-24"~trial_from_zero-1500))%>%
ungroup()%>%
rename(target_side=target, distractor_side=distractor,
gaze_point_x= gaze_point_x_adc_spx,
gaze_point_y = gaze_point_y_adc_spx)%>%
filter(gaze_point_x>=0 & gaze_point_x<= 1920)%>% #keeps only observations that are in the screen
filter(gaze_point_y>=0 & gaze_point_y<=1200)%>%
filter(!is.na(gaze_point_x))%>% #gets rid of the observations where tobii didn't get any reading
filter(!is.na(gaze_point_y))%>%
filter(!is.na(validity_left)) %>%
filter(!is.na(validity_right)) %>%
filter(validity_left<= 1)%>%
filter(validity_right <= 1)%>%
mutate(target = case_when(gaze_point_x >= target_x_min&gaze_point_x <= target_x_max&gaze_point_y >= target_y_min&gaze_point_y <= target_y_max~TRUE,
TRUE~FALSE))
#Create trial language column to describe the language in which the babies were tested
kbh_data_clean <- kbh_data_clean %>%
ungroup()%>%
group_by(studio_test_name, eng_exp, fre_exp)%>%
mutate(trial_lang = case_when(str_detect(studio_test_name,"E")~ "english",
str_detect(studio_test_name, "F")~ "french")) %>%
mutate(exp_to_target_lang = case_when(trial_lang == "english" ~ eng_exp,
trial_lang == "french" ~ fre_exp))
#1. Proportion looking to target
prop_looking <- kbh_data_clean %>%
filter(noun_onset>= 360 & noun_onset <= 3000)%>%
group_by(recording_name, subject_id, trial_number, media_name, age_months, exp_to_target_lang)%>%
summarise(samples_total=sum(target==TRUE, target==FALSE ),
samples_target=sum(target))%>%
mutate(prop_looking= samples_target/samples_total) %>%
ungroup()
#2. Proportion looking difference
#3. Number of fixations
### Total number of fixations to the target during the window of analyses
fixations_total <- kbh_data_clean  %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
filter(target == TRUE) %>%
group_by(recording_name, subject_id, trial_number, media_name) %>%
summarise(looking_to_target = sum(target==TRUE))
#4. Correct first shift to target
#5. Reaction time
distractor_initial_trials <- kbh_data_clean %>%
filter(noun_onset >= 360 & noun_onset <= 1800)%>%
mutate(initial_trial = case_when(
noun_onset >=360 & noun_onset <=400 & target==FALSE ~ "distractor_initial",
noun_onset >=360 & noun_onset <=400 & target==TRUE ~ "target_initial")
) %>%
group_by(recording_name, subject_id, trial_number, media_name, initial_trial) %>%
summarise() %>%
filter(initial_trial =="distractor_initial")
RT <- full_join (kbh_data_clean, distractor_initial_trials) %>%
filter(initial_trial=="distractor_initial") %>%
filter(noun_onset >= 360 & noun_onset <= 1800)%>%
mutate(first_true = ifelse(target == TRUE & lag(target) == FALSE, 1, 0)) %>%
filter(first_true == 1) %>%
group_by(recording_name, subject_id, trial_number, media_name,noun_onset) %>%
summarise() %>%
arrange(recording_name, trial_number, by_group = T) %>%
mutate(number_of_trial_instance = row_number()) %>%  #I only want to keep the first instance of switch because I am only interested in the latency of the very first switch towards target.
filter(number_of_trial_instance == 1) %>%
mutate(latency_to_switch = noun_onset - 360)
#6. Total number of switches between AOIs
number_of_switches<- kbh_data_clean  %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
mutate(AOI_switches = ifelse(target == TRUE & lag(target) == FALSE | target == FALSE & lag(target) == TRUE, 1, 0))%>%
filter(AOI_switches == 1) %>%
group_by(recording_name, subject_id, trial_number, media_name) %>%
summarise(total_aoi_switches = sum(AOI_switches))
#7. Mean latency of refixation during trial
#8. Mean fixation duration during trial
#9. Proportion of fixation duration
#10. Pupil dilation
#11. Duration of first look
### Duration of the first look recorded toward a particular AOI.
first_look_duration <- kbh_data_clean  %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
mutate(AOI_switches = ifelse(target == TRUE & lag(target) == FALSE | target == FALSE & lag(target) == TRUE, 1, 0)) %>%
filter(AOI_switches == 1) %>%
group_by(recording_name, subject_id, trial_number, media_name,noun_onset) %>%
summarise() %>%
arrange(recording_name, trial_number, by_group = T) %>%
mutate(number_of_trial_instance = row_number()) %>%  #I only want to keep the first instance of switch because I am only interested in the duration of the very first look during the trial analyses window.
filter(number_of_trial_instance == 1) %>%
mutate(first_look_dur = noun_onset - 360)
#1)
prop_looking_c<- prop_looking %>%
select(recording_name, subject_id, trial_number, media_name, prop_looking)
#2)
fixations_total_c<- fixations_total %>%
select(recording_name, subject_id, trial_number, media_name, looking_to_target)
#3)
RT_c<- RT %>%
select(recording_name, subject_id, trial_number, media_name, latency_to_switch)
#4)
number_of_switches_c<- number_of_switches %>%
select(recording_name, subject_id, trial_number, media_name, total_aoi_switches)
#5)
first_look_duration_c<- first_look_duration %>%
select(recording_name, subject_id, trial_number, media_name, first_look_dur)
data_new_dvs<- kbh_data_clean %>%
select(recording_name, media_name, subject_id, trial_number, age_months, exp_to_target_lang)
data_new_dvs<- full_join(data_new_dvs, prop_looking_c, by=(c("recording_name", "subject_id", "trial_number", "media_name")))
data_new_dvs<- full_join(data_new_dvs, fixations_total_c, by=(c("recording_name", "subject_id", "trial_number", "media_name")))
data_new_dvs<- full_join(data_new_dvs, RT_c, by=(c("recording_name", "subject_id", "trial_number", "media_name")))
data_new_dvs<- full_join(data_new_dvs, number_of_switches_c, by=(c("recording_name", "subject_id", "trial_number", "media_name")))
data_new_dvs<- full_join(data_new_dvs, first_look_duration_c, by=(c("recording_name", "subject_id", "trial_number", "media_name")))
View(data_new_dvs)
#Select only numerical variables for correlation
for_correlation<- data_new_dvs %>%
select(age_months, exp_to_target_lang, prop_looking, looking_to_target, latency_to_switch, total_aoi_switches, first_look_dur)
View(for_correlation)
#Select only numerical variables for correlation
for_correlation<- data_new_dvs %>%
ungroup()%>%
select(age_months, exp_to_target_lang, prop_looking, looking_to_target, latency_to_switch, total_aoi_switches, first_look_dur)
View(for_correlation)
kbh_correlation <- cor(x=data_new_dvs, use="complete.obs")
kbh_correlation <- cor(x=for_correlation, use="complete.obs")
corrplot(kbh_correlation)
coorelation_for_p<- rcorr(as.matrix(for_correlation))
View(coorelation_for_p)
correlation_for_p$p
coorrelation_for_p$p
coorelation_for_p$p
View(coorelation_for_p)
corrplot(kbh_correlation)
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(dplyr)
library(stringr)
library(Hmisc)
library(corrplot)
load(here("clean_data/arch_final.Rda"))
kbh_data_clean <- arch_final%>%
group_by(studio_project_name, studio_test_name, trial_number, recording_name)%>%
mutate(trial_from_zero = recording_timestamp-min(recording_timestamp))%>%
group_by(studio_project_name)%>%
mutate(noun_onset = case_when(studio_project_name=="CompMix-36"~trial_from_zero-3000, #Substracting noun onset to normalize
studio_project_name=="LearnMix-36"~trial_from_zero-4500,
studio_project_name=="Mix-20"~trial_from_zero-5400,
studio_project_name=="Mix-14"~trial_from_zero-5400,
studio_project_name=="CogMisp-24"~trial_from_zero-1500))%>%
ungroup()%>%
rename(target_side=target, distractor_side=distractor,
gaze_point_x= gaze_point_x_adc_spx,
gaze_point_y = gaze_point_y_adc_spx)%>%
filter(gaze_point_x>=0 & gaze_point_x<= 1920)%>% #keeps only observations that are in the screen
filter(gaze_point_y>=0 & gaze_point_y<=1200)%>%
filter(!is.na(gaze_point_x))%>% #gets rid of the observations where tobii didn't get any reading
filter(!is.na(gaze_point_y))%>%
filter(!is.na(validity_left)) %>%
filter(!is.na(validity_right)) %>%
filter(validity_left<= 1)%>%
filter(validity_right <= 1)%>%
mutate(target = case_when(gaze_point_x >= target_x_min&gaze_point_x <= target_x_max&gaze_point_y >= target_y_min&gaze_point_y <= target_y_max~TRUE,
TRUE~FALSE))
#Create trial language column to describe the language in which the babies were tested
kbh_data_clean <- kbh_data_clean %>%
ungroup()%>%
group_by(studio_test_name, eng_exp, fre_exp)%>%
mutate(trial_lang = case_when(str_detect(studio_test_name,"E")~ "english",
str_detect(studio_test_name, "F")~ "french")) %>%
mutate(exp_to_target_lang = case_when(trial_lang == "english" ~ eng_exp,
trial_lang == "french" ~ fre_exp))
#Create trial language column to describe the language in which the babies were tested
kbh_data_clean <- kbh_data_clean %>%
ungroup()%>%
group_by(studio_test_name, eng_exp, fre_exp)%>%
mutate(trial_lang = case_when(str_detect(studio_test_name,"E")~ "english",
str_detect(studio_test_name, "F")~ "french")) %>%
mutate(exp_to_target_lang = case_when(trial_lang == "english" ~ eng_exp,
trial_lang == "french" ~ fre_exp))
View(kbh_data_clean)
#1. Proportion looking to target
prop_looking <- kbh_data_clean %>%
filter(noun_onset>= 360 & noun_onset <= 3000)%>%
group_by(recording_name, subject_id, trial_number, media_name, age_months, exp_to_target_lang)%>%
summarise(samples_total=sum(target==TRUE, target==FALSE ),
samples_target=sum(target))%>%
mutate(prop_looking= samples_target/samples_total) %>%
ungroup()
#2. Proportion looking difference
#3. Number of fixations
### Total number of fixations to the target during the window of analyses.
#### Question: What is considered a fixation? --> In TOBII we kept only valid fixations (as in Mills-Smith, 2016), they also excluded by subject and by trial (which we will do).
fixations_total <- kbh_data_clean  %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
filter(target == TRUE) %>%
group_by(recording_name, subject_id, trial_number, media_name) %>%
summarise(looking_to_target = sum(target==TRUE))
#4. Correct first shift to target
#5. Reaction time
#Question: How do we define distractor initial trials. Lets define a 100ms pre-analyses window from 260 post noun onset to 360 (the start of analyses window)
distractor_initial_trials <- kbh_data_clean %>%
filter(noun_onset >= 260 & noun_onset <= 3000)%>%
mutate(initial_trial = case_when(
noun_onset >=260 & noun_onset <=360 & target==FALSE ~ "distractor_initial",
noun_onset >=260 & noun_onset <=360 & target==TRUE ~ "target_initial")
) %>%
group_by(recording_name, subject_id, trial_number, media_name, initial_trial) %>%
summarise() %>%
filter(initial_trial =="distractor_initial")
RT <- full_join (kbh_data_clean, distractor_initial_trials) %>%
filter(initial_trial=="distractor_initial") %>%
filter(noun_onset >= 360 & noun_onset <= 3000)%>%
mutate(first_true = ifelse(target == TRUE & lag(target) == FALSE, 1, 0)) %>%
filter(first_true == 1) %>%
group_by(recording_name, subject_id, trial_number, media_name,noun_onset) %>%
summarise() %>%
arrange(recording_name, trial_number, by_group = T) %>%
mutate(number_of_trial_instance = row_number()) %>%  #I only want to keep the first instance of switch because I am only interested in the latency of the very first switch towards target.
filter(number_of_trial_instance == 1) %>%
mutate(latency_to_switch = noun_onset - 360)
#6. Total number of switches between AOIs
number_of_switches<- kbh_data_clean  %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
mutate(AOI_switches = ifelse(target == TRUE & lag(target) == FALSE | target == FALSE & lag(target) == TRUE, 1, 0))%>%
filter(AOI_switches == 1) %>%
group_by(recording_name, subject_id, trial_number, media_name) %>%
summarise(total_aoi_switches = sum(AOI_switches))
#7. Mean latency of refixation during trial
#8. Mean fixation duration during trial
#9. Proportion of fixation duration
#10. Pupil dilation
#11. Duration of first look
### Duration of the first look recorded toward a particular AOI.
first_look_duration <- kbh_data_clean  %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
mutate(AOI_switches = ifelse(target == TRUE & lag(target) == FALSE | target == FALSE & lag(target) == TRUE, 1, 0)) %>%
filter(AOI_switches == 1) %>%
group_by(recording_name, subject_id, trial_number, media_name,noun_onset) %>%
summarise() %>%
arrange(recording_name, trial_number, by_group = T) %>%
mutate(number_of_trial_instance = row_number()) %>%  #I only want to keep the first instance of switch because I am only interested in the duration of the very first look during the trial analyses window.
filter(number_of_trial_instance == 1) %>%
mutate(first_look_dur = noun_onset - 360)
#Select only numerical variables for correlation
for_correlation<- data_new_dvs %>%
ungroup()%>%
select(age_months, exp_to_target_lang, prop_looking, looking_to_target, latency_to_switch, total_aoi_switches, first_look_dur)
#clean variables to be merged
#1)
prop_looking_c<- prop_looking %>%
select(recording_name, subject_id, trial_number, media_name, prop_looking)
#2)
fixations_total_c<- fixations_total %>%
select(recording_name, subject_id, trial_number, media_name, looking_to_target)
#3)
RT_c<- RT %>%
select(recording_name, subject_id, trial_number, media_name, latency_to_switch)
#4)
number_of_switches_c<- number_of_switches %>%
select(recording_name, subject_id, trial_number, media_name, total_aoi_switches)
#5)
first_look_duration_c<- first_look_duration %>%
select(recording_name, subject_id, trial_number, media_name, first_look_dur)
data_new_dvs<- kbh_data_clean %>%
select(recording_name, media_name, subject_id, trial_number, age_months, exp_to_target_lang)
data_new_dvs<- full_join(data_new_dvs, prop_looking_c, by=(c("recording_name", "subject_id", "trial_number", "media_name")))
data_new_dvs<- full_join(data_new_dvs, fixations_total_c, by=(c("recording_name", "subject_id", "trial_number", "media_name")))
data_new_dvs<- full_join(data_new_dvs, RT_c, by=(c("recording_name", "subject_id", "trial_number", "media_name")))
data_new_dvs<- full_join(data_new_dvs, number_of_switches_c, by=(c("recording_name", "subject_id", "trial_number", "media_name")))
data_new_dvs<- full_join(data_new_dvs, first_look_duration_c, by=(c("recording_name", "subject_id", "trial_number", "media_name")))
#Select only numerical variables for correlation
for_correlation<- data_new_dvs %>%
ungroup()%>%
select(age_months, exp_to_target_lang, prop_looking, looking_to_target, latency_to_switch, total_aoi_switches, first_look_dur)
kbh_correlation <- cor(x=for_correlation, use="complete.obs")
corrplot(kbh_correlation)
kbh_correlation_s <- cor(x=for_correlation, use="complete.obs", method = "spearman")
corrplot(kbh_correlation_s)
coorelation_for_p<- rcorr(as.matrix(for_correlation))
rcorr(as.matrix(for_correlation))
print(as.table(coorelation_for_p))
print(coorelation_for_p)
