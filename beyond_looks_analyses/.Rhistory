noun_onset >=260 & noun_onset <=360 & target==TRUE ~ "target_initial")
) %>%
group_by(recording_name, subject_id, trial_number, media_name, initial_trial) %>%
summarise() %>%
filter(initial_trial =="distractor_initial")
prop_looking <- kbh_data_clean %>%
filter(noun_onset>= 360 & noun_onset <= 3000)%>%
group_by(recording_name, subject_id, trial_number, media_name, age_months, exp_to_target_lang)%>%
summarise(samples_total=sum(target==TRUE, target==FALSE ),
samples_target=sum(target))%>%
mutate(prop_looking= samples_target/samples_total) %>%
ungroup()
View(arch_final)
unique(arch_final$media_name)
fixations_total <- kbh_data_clean  %>%
filter(noun_onset >= 360 & noun_onset <= 3000) #%>%
View(fixations_total)
library(here)
library(dplyr)
library(stringr)
library(Hmisc)
library(corrplot)
library(zoo)
library(tidyverse)
load(here("archival_KBH_anonimyzed/arch_final.Rda"))
```
kbh_data_clean <- arch_final%>%
group_by(studio_project_name, studio_test_name, trial_number, recording_name)%>%
mutate(trial_from_zero = recording_timestamp-min(recording_timestamp))%>%
group_by(studio_project_name)%>%
mutate(noun_onset = case_when(studio_project_name=="CompMix-36"~trial_from_zero-3000, #Substracting noun onset to normalize
studio_project_name=="LearnMix-36"~trial_from_zero-4500,
studio_project_name=="Mix-20"~trial_from_zero-5400,
studio_project_name=="Mix-14"~trial_from_zero-5400,
studio_project_name=="CogMisp-24"~trial_from_zero-1500))%>%
ungroup()%>%
rename(target_side=target, distractor_side=distractor,
gaze_point_x= gaze_point_x_adc_spx,
gaze_point_y = gaze_point_y_adc_spx)%>%
mutate(trackloss = case_when(gaze_point_x<0 ~ TRUE,
gaze_point_x> 1920 ~ TRUE,
gaze_point_y<0 ~ TRUE,
gaze_point_y > 1200 ~ TRUE,
is.na(gaze_point_x) ~ TRUE,
is.na(gaze_point_y) ~ TRUE,
is.na(validity_left) ~ TRUE,
is.na(validity_right) ~ TRUE,
validity_left > 1 ~ TRUE,
validity_right > 1 ~ TRUE,
TRUE~ FALSE))
View(kbh_data_clean)
kbh_data_clean <- arch_final%>%
group_by(studio_project_name, studio_test_name, trial_number, recording_name)%>%
mutate(trial_from_zero = recording_timestamp-min(recording_timestamp))%>%
group_by(studio_project_name)%>%
mutate(noun_onset = case_when(studio_project_name=="CompMix-36"~trial_from_zero-3000, #Substracting noun onset to normalize
studio_project_name=="LearnMix-36"~trial_from_zero-4500,
studio_project_name=="Mix-20"~trial_from_zero-5400,
studio_project_name=="Mix-14"~trial_from_zero-5400,
studio_project_name=="CogMisp-24"~trial_from_zero-1500))%>%
ungroup()%>%
rename(target_side=target, distractor_side=distractor,
gaze_point_x= gaze_point_x_adc_spx,
gaze_point_y = gaze_point_y_adc_spx)%>%
mutate(trackloss = case_when(gaze_point_x<0 ~ TRUE,
gaze_point_x> 1920 ~ TRUE,
gaze_point_y<0 ~ TRUE,
gaze_point_y > 1200 ~ TRUE,
is.na(gaze_point_x) ~ TRUE,
is.na(gaze_point_y) ~ TRUE,
is.na(validity_left) ~ TRUE,
is.na(validity_right) ~ TRUE,
validity_left > 1 ~ TRUE,
validity_right > 1 ~ TRUE,
TRUE~ FALSE)) %>% #MAKE VISUALIZATIONS ABOUT TRACKLOSS FOR SANITY CHECK
mutate(target = case_when(gaze_point_x >= target_x_min&gaze_point_x <= target_x_max&gaze_point_y >= target_y_min&gaze_point_y <= target_y_max~TRUE,
TRUE~FALSE)) %>%
mutate(distractor = case_when(gaze_point_x >= distractor_x_min&gaze_point_x <= distractor_x_max&gaze_point_y >= distractor_y_min&gaze_point_y <= distractor_y_max~TRUE,
TRUE ~ FALSE))
#Create trial language column to describe the language in which the babies were tested
kbh_data_clean <- kbh_data_clean %>%
ungroup()%>%
group_by(studio_test_name, eng_exp, fre_exp)%>%
mutate(trial_lang = case_when(str_detect(studio_test_name,"E")~ "english",
str_detect(studio_test_name, "F")~ "french")) %>%
mutate(exp_to_target_lang = case_when(trial_lang == "english" ~ eng_exp,
trial_lang == "french" ~ fre_exp))
###### First, create variables that will be useful for the calculations below ## TRY TO DO IT IN THE SAME DATA SET
distractor_initial_trials <- kbh_data_clean %>%
filter(noun_onset >= 260 & noun_onset <= 3000)%>%
mutate(initial_trial = case_when(
noun_onset >=260 & noun_onset <=360 & distractor==TRUE ~ "distractor_initial",
noun_onset >=260 & noun_onset <=360 & target==TRUE ~ "target_initial")
)
View(distractor_initial_trials)
###### First, create variables that will be useful for the calculations below ## TRY TO DO IT IN THE SAME DATA SET
distractor_initial_trials <- kbh_data_clean %>%
filter(noun_onset >= 260 & noun_onset <= 3000)%>%
mutate(initial_trial = case_when(
noun_onset >=260 & noun_onset <=360 & distractor==TRUE ~ "distractor_initial",
noun_onset >=260 & noun_onset <=360 & target==TRUE ~ "target_initial")
) %>%
group_by(recording_name, subject_id, trial_number, media_name, initial_trial) %>%
summarise() %>%
filter(initial_trial =="distractor_initial")
###### First, create variables that will be useful for the calculations below ## TRY TO DO IT IN THE SAME DATA SET
distractor_initial_trials <- kbh_data_clean %>%
filter(noun_onset >= 260 & noun_onset <= 3000)%>%
mutate(initial_trial = case_when(
noun_onset >=260 & noun_onset <=360 & distractor==TRUE ~ "distractor_initial",
noun_onset >=260 & noun_onset <=360 & target==TRUE ~ "target_initial")
) %>%
group_by(recording_name, subject_id, trial_number, media_name, initial_trial) %>%
summarise()
View(distractor_initial_trials)
View(arch_final)
View(kbh_data_clean)
###### First, create variables that will be useful for the calculations below ## TRY TO DO IT IN THE SAME DATA SET
distractor_initial_trials <- kbh_data_clean %>%
filter(noun_onset >= 260 & noun_onset <= 360)
View(distractor_initial_trials)
###### First, create variables that will be useful for the calculations below ## TRY TO DO IT IN THE SAME DATA SET
distractor_initial_trials <- kbh_data_clean %>%
filter(noun_onset >= 260 & noun_onset <= 360)
?add_count
###### First, create variables that will be useful for the calculations below ## TRY TO DO IT IN THE SAME DATA SET
distractor_initial_trials <- kbh_data_clean %>%
filter(noun_onset >= 260 & noun_onset <= 360)
###### First, create variables that will be useful for the calculations below ## TRY TO DO IT IN THE SAME DATA SET
distractor_initial_trials <- kbh_data_clean %>%
filter(noun_onset >= 260 & noun_onset <= 360)
library(here)
library(dplyr)
library(stringr)
library(Hmisc)
library(corrplot)
library(zoo)
library(tidyverse)
load(here("archival_KBH_anonimyzed/arch_final.Rda"))
kbh_data_clean <- arch_final%>%
group_by(studio_project_name, studio_test_name, trial_number, recording_name)%>%
mutate(trial_from_zero = recording_timestamp-min(recording_timestamp))%>%
group_by(studio_project_name)%>%
mutate(noun_onset = case_when(studio_project_name=="CompMix-36"~trial_from_zero-3000, #Substracting noun onset to normalize
studio_project_name=="LearnMix-36"~trial_from_zero-4500,
studio_project_name=="Mix-20"~trial_from_zero-5400,
studio_project_name=="Mix-14"~trial_from_zero-5400,
studio_project_name=="CogMisp-24"~trial_from_zero-1500))%>%
ungroup()%>%
rename(target_side=target, distractor_side=distractor,
gaze_point_x= gaze_point_x_adc_spx,
gaze_point_y = gaze_point_y_adc_spx)%>%
mutate(trackloss = case_when(gaze_point_x<0 ~ TRUE,
gaze_point_x> 1920 ~ TRUE,
gaze_point_y<0 ~ TRUE,
gaze_point_y > 1200 ~ TRUE,
is.na(gaze_point_x) ~ TRUE,
is.na(gaze_point_y) ~ TRUE,
is.na(validity_left) ~ TRUE,
is.na(validity_right) ~ TRUE,
validity_left > 1 ~ TRUE,
validity_right > 1 ~ TRUE,
TRUE~ FALSE)) %>% #MAKE VISUALIZATIONS ABOUT TRACKLOSS FOR SANITY CHECK
mutate(target = case_when(gaze_point_x >= target_x_min&gaze_point_x <= target_x_max&gaze_point_y >= target_y_min&gaze_point_y <= target_y_max~TRUE,
TRUE~FALSE)) %>%
mutate(distractor = case_when(gaze_point_x >= distractor_x_min&gaze_point_x <= distractor_x_max&gaze_point_y >= distractor_y_min&gaze_point_y <= distractor_y_max~TRUE,
TRUE ~ FALSE))
#Create trial language column to describe the language in which the babies were tested
kbh_data_clean <- kbh_data_clean %>%
ungroup()%>%
group_by(studio_test_name, eng_exp, fre_exp)%>%
mutate(trial_lang = case_when(str_detect(studio_test_name,"E")~ "english",
str_detect(studio_test_name, "F")~ "french")) %>%
mutate(exp_to_target_lang = case_when(trial_lang == "english" ~ eng_exp,
trial_lang == "french" ~ fre_exp))
kbh_data_clean <- arch_final%>%
group_by(studio_project_name, studio_test_name, trial_number, recording_name)%>%
mutate(trial_from_zero = recording_timestamp-min(recording_timestamp))%>%
group_by(studio_project_name)%>%
mutate(noun_onset = case_when(studio_project_name=="CompMix-36"~trial_from_zero-3000, #Substracting noun onset to normalize
studio_project_name=="LearnMix-36"~trial_from_zero-4500,
studio_project_name=="Mix-20"~trial_from_zero-5400,
studio_project_name=="Mix-14"~trial_from_zero-5400,
studio_project_name=="CogMisp-24"~trial_from_zero-1500))%>%
ungroup()%>%
rename(target_side=target, distractor_side=distractor,
gaze_point_x= gaze_point_x_adc_spx,
gaze_point_y = gaze_point_y_adc_spx)%>%
mutate(trackloss = case_when(gaze_point_x<0 ~ TRUE,
gaze_point_x> 1920 ~ TRUE,
gaze_point_y<0 ~ TRUE,
gaze_point_y > 1200 ~ TRUE,
is.na(gaze_point_x) ~ TRUE,
is.na(gaze_point_y) ~ TRUE,
is.na(validity_left) ~ TRUE,
is.na(validity_right) ~ TRUE,
validity_left > 1 ~ TRUE,
validity_right > 1 ~ TRUE,
TRUE~ FALSE)) %>% #MAKE VISUALIZATIONS ABOUT TRACKLOSS FOR SANITY CHECK
mutate(target = case_when(gaze_point_x >= target_x_min&gaze_point_x <= target_x_max&gaze_point_y >= target_y_min&gaze_point_y <= target_y_max~TRUE,
TRUE~FALSE)) %>%
mutate(distractor = case_when(gaze_point_x >= distractor_x_min&gaze_point_x <= distractor_x_max&gaze_point_y >= distractor_y_min&gaze_point_y <= distractor_y_max~TRUE,
TRUE ~ FALSE))
#Create trial language column to describe the language in which the babies were tested
kbh_data_clean <- kbh_data_clean %>%
ungroup()%>%
group_by(studio_test_name, eng_exp, fre_exp)%>%
mutate(trial_lang = case_when(str_detect(studio_test_name,"E")~ "english",
str_detect(studio_test_name, "F")~ "french")) %>%
mutate(exp_to_target_lang = case_when(trial_lang == "english" ~ eng_exp,
trial_lang == "french" ~ fre_exp))
###### First, create variables that will be useful for the calculations below ## TRY TO DO IT IN THE SAME DATA SET
distractor_initial_trials <- kbh_data_clean %>%
filter(noun_onset >= 260 & noun_onset <= 360)
###### First, create variables that will be useful for the calculations below ## TRY TO DO IT IN THE SAME DATA SET
distractor_initial_trials <- kbh_data_clean %>%
filter(noun_onset >= 260 & noun_onset <= 360)
###### First, create variables that will be useful for the calculations below ## TRY TO DO IT IN THE SAME DATA SET
distractor_initial_trials <- kbh_data_clean %>%
filter(noun_onset >= 260 & noun_onset <= 360) %>%
group_by(recording_name, trial_number, media_name) %>%
summarise(
distractor_count = sum(distractor),
target_count = sum(target),
trackloss_count = sum(trackloss)
)
View(distractor_initial_trials)
range(distractor_initial_trials$distractor_count)
range(distractor_initial_trials$trackloss_count)
###### First, create variables that will be useful for the calculations below ## TRY TO DO IT IN THE SAME DATA SET
distractor_initial_trials <- kbh_data_clean %>%
filter(noun_onset >= 260 & noun_onset <= 360) %>%
group_by(recording_name, trial_number, media_name) %>%
summarise(
distractor_count = sum(distractor),
target_count = sum(target),
trackloss_count = sum(trackloss)
%>%
mutate(distractor_initial = case_when(target_count >0 ~ FALSE,
distractor_count/(distractor_count+trackloss_count) >=0.5 ~ TRUE,
TRUE ~ FALSE)))
###### First, create variables that will be useful for the calculations below ## TRY TO DO IT IN THE SAME DATA SET
distractor_initial_trials <- kbh_data_clean %>%
filter(noun_onset >= 260 & noun_onset <= 360) %>%
group_by(recording_name, trial_number, media_name) %>%
summarise(
distractor_count = sum(distractor),
target_count = sum(target),
trackloss_count = sum(trackloss)
)
###### First, create variables that will be useful for the calculations below ## TRY TO DO IT IN THE SAME DATA SET
distractor_initial_trials <- kbh_data_clean %>%
filter(noun_onset >= 260 & noun_onset <= 360) %>%
group_by(recording_name, trial_number, media_name) %>%
summarise(
distractor_count = sum(distractor),
target_count = sum(target),
trackloss_count = sum(trackloss)
)%>%
mutate(distractor_initial = case_when(target_count >0 ~ FALSE,
distractor_count/(distractor_count+trackloss_count) >=0.5 ~ TRUE,
TRUE ~ FALSE))
prop_looking <- kbh_data_clean %>%
filter(noun_onset>= 360 & noun_onset <= 3000)%>%
group_by(recording_name, subject_id, trial_number, media_name, age_months, exp_to_target_lang)%>%
summarise(samples_target=sum(target),
samples_distractor=sum(distractor))%>%
mutate(prop_looking= samples_target/(samples_target + samples_distractor)) %>%
ungroup()
View(prop_looking)
install.packages("eyetrackingR")
library(eyetrackingR)
?detect_fixations
View(kbh_data_clean)
?rle
fixations_total <- kbh_data_clean  %>%
filter(noun_onset >= 360 & noun_onset <= 3000) #%>%
fixations_total <- kbh_data_clean  %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
group_by(recording_name, subject_id, trial_number, media_name) %>%
summarise(fixations = rle(target))
fixations_total <- kbh_data_clean  %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
group_by(recording_name, subject_id, trial_number, media_name)
fixations <- rle(fixations_total$target)
View(fixations)
print(rle)
as.data.frame(fixations)
# Group by subject and summarize consecutive TRUE values in target column
fixations_total <- kbh_data_clean   %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
group_by(recording_name, subject_id, trial_number, media_name) %>%
summarise(consecutive_target = count_consecutive_true(target))
count_consecutive_true <- function(x) {
r <- rle(x)
max(r$lengths[r$values])
}
# Group by subject and summarize consecutive TRUE values in target column
fixations_total <- kbh_data_clean   %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
group_by(recording_name, subject_id, trial_number, media_name) %>%
summarise(consecutive_target = count_consecutive_true(target))
View(fixations_total)
# Group by subject and summarize consecutive TRUE values in target column
fixations_total <- kbh_data_clean   %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
group_by(recording_name) %>%
summarise(consecutive_target = count_consecutive_true(target))
# Group by subject and summarize consecutive TRUE values in target column
fixations_total <- kbh_data_clean   %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
group_by(recording_name, subject_id, trial_number, media_name) %>%
summarise(consecutive_target = count_consecutive_true(target))
View(kbh_data_clean)
# Group by subject and summarize consecutive TRUE values in target column
fixations_total <- kbh_data_clean   %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
group_by(recording_name, subject_id, trial_number, media_name, target) %>%
summarise(consecutive_target = count_consecutive_true(target))
# Group by subject and summarize consecutive TRUE values in target column
fixations_total <- kbh_data_clean   %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
group_by(recording_name, subject_id, trial_number, media_name) %>%
summarise(consecutive_target = count_consecutive_blocks(target))
count_consecutive_blocks <- function(x) {
r <- rle(x)
sum(r$values & r$lengths >= 2)
}
# Group by subject and summarize consecutive TRUE values in target column
fixations_total <- kbh_data_clean   %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
group_by(recording_name, subject_id, trial_number, media_name) %>%
summarise(consecutive_target = count_consecutive_blocks(target))
hist(fixations_total$consecutive_target)
mean(fixations_total$consecutive_target)
median(fixations_total$consecutive_target)
count_consecutive_blocks <- function(x) {
r <- rle(x)
sum(r$values & r$lengths >= 5)
}
# Group by subject and summarize consecutive TRUE values in target column
fixations_total <- kbh_data_clean   %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
group_by(recording_name, subject_id, trial_number, media_name) %>%
summarise(consecutive_target = count_consecutive_blocks(target))
hist(fixations_total$consecutive_target)
200/17
count_consecutive_blocks <- function(x) {
r <- rle(x)
sum(r$values & r$lengths >= 12)
}
# Group by subject and summarize consecutive TRUE values in target column
fixations_total <- kbh_data_clean   %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
group_by(recording_name, subject_id, trial_number, media_name) %>%
summarise(consecutive_target = count_consecutive_blocks(target))
hist(fixations_total$consecutive_target)
fixations_total2 <- kbh_data_clean   %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
filter(!(trackloss == TRUE & lag(trackloss) == TRUE))%>%
group_by(recording_name, subject_id, trial_number, media_name) %>%
summarise(consecutive_target = count_consecutive_blocks(target))
fixations_total2 <- kbh_data_clean   %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
filter(!(trackloss == TRUE & lag(trackloss) == TRUE))%>%  #This got rid of short tracklosses in a run
filter(!(trackloss == TRUE & lag(trackloss) == FALSE & lead(trackloss) == FALSE))%>%
group_by(recording_name, subject_id, trial_number, media_name) %>%
summarise(consecutive_target = count_consecutive_blocks(target))
fixations_total2 <- kbh_data_clean   %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
filter(!(lag(trackloss) == FALSE & trackloss == TRUE & lead(trackloss) == TRUE & lead(lead(trackloss))== FALSE))%>%  #This got rid of short tracklosses in a run
filter(!(trackloss == TRUE & lag(trackloss) == FALSE & lead(trackloss) == FALSE))%>%
group_by(recording_name, subject_id, trial_number, media_name) %>%
summarise(consecutive_target = count_consecutive_blocks(target))
fixations_total2 <- kbh_data_clean   %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
filter(!(lag(trackloss) == FALSE & trackloss == TRUE & lead(trackloss) == TRUE & lead(lead(trackloss))== FALSE))%>%  #This got rid of short tracklosses in a run
filter(!(trackloss == TRUE & lag(trackloss) == FALSE & lead(trackloss) == FALSE))%>%
group_by(recording_name, subject_id, trial_number, media_name)
testtest<- kbh_data_clean %>%
filter(noun_onset >= 360 & noun_onset <= 3000)
###### First, create variables that will be useful for the calculations below ## TRY TO DO IT IN THE SAME DATA SET
initial_looks <- kbh_data_clean %>%
filter(noun_onset >= 260 & noun_onset <= 360) %>%
group_by(recording_name, trial_number, media_name) %>%
summarise(
distractor_count = sum(distractor),
target_count = sum(target),
trackloss_count = sum(trackloss)
)%>%
mutate(initial_look = case_when(target_count >0 ~ "target",
distractor_count/(distractor_count+trackloss_count) >=0.5 ~ "distractor",
target_count/(target_count +trackloss_count) >=0.5 ~ "target",
TRUE ~ "neither"))
View(initial_looks)
kbh_data_clean_T <- left_join(kbh_data_clean, initial_looks, by= c("recording_name", "trial_number", "media_name"))
kbh_data_clean <- left_join(kbh_data_clean, initial_looks, by= c("recording_name", "trial_number", "media_name"))
#MAKE SURE FULL JOIN IS THE BEST OPTION AND MERGE THIS EARLIER
first_shift_target <- kbh_data_clean %>%
filter(noun_onset >= 360 & noun_onset <= 1800) %>%
#Flagging the moment within a trial where the subject switched from distracter to target, within the window.
#mutate(correct_switch = case_when(initial_look == "distractor" & lag(initial_look)=="target" ~ TRUE,)) %>%
#Grouping and summarizing to get by subject by trial flagging of whether there was switching or not.
group_by(recording_name, subject_id, trial_number, media_name) %>%
summarise(sum(initial_look))
#MAKE SURE FULL JOIN IS THE BEST OPTION AND MERGE THIS EARLIER
first_shift_target <- kbh_data_clean %>%
filter(noun_onset >= 360 & noun_onset <= 1800) %>%
#Flagging the moment within a trial where the subject switched from distracter to target, within the window.
#mutate(correct_switch = case_when(initial_look == "distractor" & lag(initial_look)=="target" ~ TRUE,)) %>%
#Grouping and summarizing to get by subject by trial flagging of whether there was switching or not.
group_by(recording_name, subject_id, trial_number, media_name) %>%
summarise(count(initial_look))
#MAKE SURE FULL JOIN IS THE BEST OPTION AND MERGE THIS EARLIER
first_shift_target <- kbh_data_clean %>%
filter(noun_onset >= 360 & noun_onset <= 1800) %>%
#Flagging the moment within a trial where the subject switched from distracter to target, within the window.
#mutate(correct_switch = case_when(initial_look == "distractor" & lag(initial_look)=="target" ~ TRUE,)) %>%
#Grouping and summarizing to get by subject by trial flagging of whether there was switching or not.
group_by(recording_name, subject_id, trial_number, media_name) %>%
count(initial_look)
View(first_shift_target)
#MAKE SURE FULL JOIN IS THE BEST OPTION AND MERGE THIS EARLIER
first_shift_target <- kbh_data_clean %>%
filter(noun_onset >= 360 & noun_onset <= 1800) %>%
#Flagging the moment within a trial where the subject switched from distracter to target, within the window.
#mutate(correct_switch = case_when(initial_look == "distractor" & lag(initial_look)=="target" ~ TRUE,)) %>%
#Grouping and summarizing to get by subject by trial flagging of whether there was switching or not.
group_by(recording_name, subject_id, trial_number, media_name, initial_look) %>%
count(target, distractor)
View(first_shift_target)
#MAKE SURE FULL JOIN IS THE BEST OPTION AND MERGE THIS EARLIER
first_shift_target <- kbh_data_clean %>%
filter(noun_onset >= 360 & noun_onset <= 1800) %>%
#Flagging the moment within a trial where the subject switched from distracter to target, within the window.
#mutate(correct_switch = case_when(initial_look == "distractor" & lag(initial_look)=="target" ~ TRUE,)) %>%
#Grouping and summarizing to get by subject by trial flagging of whether there was switching or not.
group_by(recording_name, subject_id, trial_number, media_name, initial_look) %>%
summarise(sum(target, distractor))
#MAKE SURE FULL JOIN IS THE BEST OPTION AND MERGE THIS EARLIER
first_shift_target <- kbh_data_clean %>%
filter(noun_onset >= 360 & noun_onset <= 1800) %>%
#Flagging the moment within a trial where the subject switched from distracter to target, within the window.
#mutate(correct_switch = case_when(initial_look == "distractor" & lag(initial_look)=="target" ~ TRUE,)) %>%
#Grouping and summarizing to get by subject by trial flagging of whether there was switching or not.
group_by(recording_name, subject_id, trial_number, media_name, initial_look) %>%
summarise(target = sum(target),
distractor =  sum(distractor))
###### First, create variables that will be useful for the calculations below ## TRY TO DO IT IN THE SAME DATA SET
initial_looks <- kbh_data_clean %>%
filter(noun_onset >= 260 & noun_onset < 360) %>%
group_by(recording_name, trial_number, media_name) %>%
summarise(
distractor_count = sum(distractor),
target_count = sum(target),
trackloss_count = sum(trackloss)
)%>%
mutate(initial_look = case_when(target_count >0 ~ "target",
distractor_count/(distractor_count+trackloss_count) >=0.5 ~ "distractor",
target_count/(target_count +trackloss_count) >=0.5 ~ "target",
TRUE ~ "neither"))
#MAKE SURE FULL JOIN IS THE BEST OPTION AND MERGE THIS EARLIER
first_shift_target <- kbh_data_clean %>%
filter(noun_onset >= 360 & noun_onset <= 1800) %>%
#Flagging the moment within a trial where the subject switched from distracter to target, within the window.
#mutate(correct_switch = case_when(initial_look == "distractor" & lag(initial_look)=="target" ~ TRUE,)) %>%
#Grouping and summarizing to get by subject by trial flagging of whether there was switching or not.
group_by(recording_name, subject_id, trial_number, media_name, initial_look) %>%
summarise(target = sum(target),
distractor =  sum(distractor))
first_shift_target <- kbh_data_clean %>%
filter(noun_onset >= 360 & noun_onset <= 1800) %>%
#Flagging the moment within a trial where the subject switched from distracter to target, within the window.
#mutate(correct_switch = case_when(initial_look == "distractor" & lag(initial_look)=="target" ~ TRUE,)) %>%
#Grouping and summarizing to get by subject by trial flagging of whether there was switching or not.
group_by(recording_name, subject_id, trial_number, media_name, initial_look) %>%
summarise(target = sum(target),
distractor =  sum(distractor)) %>%
ungroup() %>%
mutate(correct_shift = case_when(initial_look == "target" & distractor =0 ~ TRUE,
first_shift_target <- kbh_data_clean %>%
filter(noun_onset >= 360 & noun_onset <= 1800) %>%
#Flagging the moment within a trial where the subject switched from distracter to target, within the window.
#mutate(correct_switch = case_when(initial_look == "distractor" & lag(initial_look)=="target" ~ TRUE,)) %>%
#Grouping and summarizing to get by subject by trial flagging of whether there was switching or not.
group_by(recording_name, subject_id, trial_number, media_name, initial_look) %>%
summarise(target = sum(target),
distractor =  sum(distractor)) %>%
ungroup() %>%
mutate(correct_shift = case_when(initial_look == "target" & distractor ==0 ~ TRUE,
initial_look == "distractor" & target >0 ~ TRUE,
TRUE~FALSE))
prop_shifts_distractor_initial <- first_shift_target %>%
filter(initial_look == "distractor") %>%
group_by(recording_name) %>%
summarise(sum(correct_shift == TRUE)/sum(correct_shift == TRUE/correct_shift== FALSE))
prop_shifts_distractor_initial <- first_shift_target %>%
filter(initial_look == "distractor") %>%
group_by(recording_name) %>%
summarise(sum(correct_shift == TRUE)/sum(correct_shift == TRUE+correct_shift== FALSE))
prop_shifts_distractor_initial <- first_shift_target %>%
filter(initial_look == "distractor") %>%
group_by(recording_name) %>%
summarise(sum (is.true(correct_shift))/sum((is.true(correct_shift)+ !is.true(correct_shift))))
prop_shifts_distractor_initial <- first_shift_target %>%
filter(initial_look == "distractor") %>%
group_by(recording_name) %>%
summarise(sum (isTRUE(correct_shift))/sum((isTRUE(correct_shift)+ !isTRUE(correct_shift))))
prop_shifts_target_initial <- first_shift_target %>%
filter(initial_look == "target") %>%
group_by(recording_name) %>%
summarise(sum (isTRUE(correct_shift))/sum((isTRUE(correct_shift)+ !isTRUE(correct_shift))))
