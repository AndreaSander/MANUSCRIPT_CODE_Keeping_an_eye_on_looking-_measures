ungroup()
fixations_total_by_subject <- fixations_total_by_trial %>%
group_by(recording_name) %>%
summarise(number_fixations = sum(number_fixations)) %>%
ungroup()
first_shift_target <- analysis_dataset %>%
ungroup() %>%
filter(noun_onset >= 360 & noun_onset <= 1800) %>% #Keeping the shorter window to be consistent with Fernald
#Grouping and summarizing to get by subject by trial flagging of whether there was switching or not.
group_by(recording_name, subject_id, trial_number, media_name, initial_look) %>%
summarise(target = sum(target, na.rm = T),
distractor =  sum(distractor, na.rm = T)) %>% #Counting how many looks to target and distractor by timeslice grouped by target or distractor initial trials.
ungroup() %>%
mutate(correct_shift = case_when(initial_look == "target" & distractor ==0 ~ TRUE,
initial_look == "distractor" & target >0 ~ TRUE,
TRUE~FALSE)) #Making a column to calculate correct shifts. We defined correct shift as never looking to the distractor on target initial trial, or switching to the taget on distractor initial trials
prop_shifts_distractor_initial_by_trial <- first_shift_target %>%
filter(initial_look == "distractor")
prop_shifts_distractor_initial_by_subject <- prop_shifts_distractor_initial_by_trial %>%
group_by(recording_name) %>%
summarise(prop_shift_distractor_initial = sum(correct_shift == TRUE)/n())
prop_shifts_target_initial_by_trial <- first_shift_target %>%
filter(initial_look == "target")
prop_shifts_target_initial_by_subject <- prop_shifts_target_initial_by_trial %>%
group_by(recording_name) %>%
summarise(prop_shift_target_initial = sum(correct_shift == TRUE)/n())
RT_by_trial <- analysis_dataset %>%
ungroup() %>%
filter(noun_onset >= 360 & noun_onset <= 1800) %>% #Keeping the shorter window to be consistent with Fernald
#Grouping and summarizing to get by subject by trial flagging of whether there was switching or not.
filter(initial_look == "distractor") %>%
filter(target == TRUE) %>%
group_by(trial_number, media_name, recording_name, subject_id, initial_look, target) %>%
slice_head() %>%
mutate(latency_to_switch = noun_onset - 360) %>%
ungroup() %>%
dplyr::select(recording_name, trial_number, latency_to_switch)
RT_by_subject <- RT_by_trial %>%
group_by(recording_name) %>%
summarise(mean_RT = mean(latency_to_switch, na.rm = T)) %>%
ungroup()
number_of_switches_by_trial <- analysis_dataset %>%
ungroup() %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
#for this one, get rid of track loss rows
filter(trackloss == FALSE) %>%
group_by(recording_name, trial_number) %>%
mutate(looking_stretch_id = data.table::rleid(target)) %>%
group_by(recording_name, trial_number, looking_stretch_id) %>%
#keep stretches that are at least 200 ms or 12 rows
filter(n() >= 12) %>%
mutate(where_looking = case_when(target == TRUE ~ "target",
distractor == TRUE ~ "distractor",
TRUE ~ "neither")) %>%
filter(where_looking != "neither") %>%
distinct(recording_name, trial_number, looking_stretch_id, where_looking, media_name, subject_id) %>%
group_by(recording_name, trial_number) %>%
mutate(AOI_switches = case_when(lag(where_looking) == "target" & where_looking == "distractor" ~ 1,
lag(where_looking) == "distractor" & where_looking == "target" ~ 1)) %>%
group_by(recording_name, trial_number) %>%
summarise(total_aoi_switches = sum(AOI_switches, na.rm = T)) %>%
ungroup()
number_of_switches_by_trial <- analysis_dataset %>%
ungroup() %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
#for this one, get rid of track loss rows
filter(trackloss == FALSE) %>%
group_by(recording_name, trial_number) %>%
mutate(looking_stretch_id = data.table::rleid(target)) %>%
group_by(recording_name, trial_number, looking_stretch_id) %>%
#keep stretches that are at least 200 ms or 12 rows
filter(n() >= 12) %>%
mutate(where_looking = case_when(target == TRUE ~ "target",
distractor == TRUE ~ "distractor",
TRUE ~ "neither")) %>%
filter(where_looking != "neither") %>%
distinct(recording_name, trial_number, looking_stretch_id, where_looking, media_name, subject_id) %>%
group_by(recording_name, trial_number) %>%
mutate(AOI_switches = case_when(lag(where_looking) == "target" & where_looking == "distractor" ~ 1,
lag(where_looking) == "distractor" & where_looking == "target" ~ 1)) %>%
group_by(recording_name, trial_number) %>%
summarise(total_aoi_switches = sum(AOI_switches, na.rm = T)) %>%
ungroup()
number_of_switches_by_subject <- number_of_switches_by_trial %>%
group_by(recording_name) %>%
summarise(total_aoi_switches = sum(total_aoi_switches, na.rm = T)) %>%
ungroup()
mean_fixation_dur_by_trial <- analysis_dataset %>%
filter(noun_onset>= 360 & noun_onset <= 3000)%>%
group_by(recording_name, trial_number) %>%
mutate(trackloss_group_id = data.table::rleid(trackloss)) %>%
group_by(trackloss_group_id, recording_name, trial_number) %>%
mutate(num_consec_trackloss_rows = n()) %>%
ungroup() %>%
filter(trackloss == FALSE | (trackloss == TRUE & num_consec_trackloss_rows >= 2)) %>%
group_by(recording_name, trial_number) %>%
mutate(looking_stretch_id = data.table::rleid(target)) %>%
group_by(recording_name, trial_number, looking_stretch_id) %>%
#filter to fixations of at least 12 rows or ~ 200 ms
filter(n() >= 12) %>%
filter(target == TRUE) %>%
group_by(recording_name, trial_number, media_name, looking_stretch_id) %>%
summarise(length_of_looks = n()) %>%
mutate(duration_of_look = length_of_looks*(1000/60)) %>%
group_by(recording_name, trial_number) %>%
summarise(duration_of_look = mean(duration_of_look, na.rm = T)) %>%
ungroup()
mean_fixation_dur_by_subject <- mean_fixation_dur_by_trial %>%
group_by(recording_name) %>%
summarise(duration_of_look = mean(duration_of_look, na.rm = T)) %>%
ungroup()
pupil_dilation <- analysis_dataset %>%
ungroup() %>%
filter(noun_onset>= -200 & noun_onset <= 500)%>%
mutate(pupil_period = case_when(noun_onset >= -200 & noun_onset <= 0 ~ "baseline",
TRUE ~ "post_onset"))%>%
dplyr::select(recording_timestamp, subject_id, recording_name, trial_number, media_name, pupil_period, pupil_right, pupil_left) %>%
mutate(two_pupil_mean = case_when(is.na(pupil_left) & is.na(pupil_right) ~ NA,
is.na(pupil_left)  ~ pupil_right,
is.na(pupil_right) ~ pupil_left,
TRUE ~ (pupil_left + pupil_right)/2)) %>%
filter(!is.na(two_pupil_mean))
#Peak dilation
peak_dilation_by_trial <- pupil_dilation %>%
ungroup()%>%
group_by(trial_number, recording_name, pupil_period) %>%
summarise(peak_pupil = max(two_pupil_mean)) %>%
pivot_wider(names_from = pupil_period, values_from ="peak_pupil")%>%
mutate(peak_pupil_size_difference = post_onset - baseline) %>% #difference in peak pupil points
filter(!is.na(peak_pupil_size_difference)) %>%
rename(max_pupil_baseline = baseline,
max_pupil_post_onset = post_onset) %>%
ungroup()
peak_dilation_by_subject <- peak_dilation_by_trial %>%
group_by(recording_name) %>%
summarise(peak_pupil_size_difference = mean(peak_pupil_size_difference)) %>%
ungroup()
#Mean dilation
mean_dilation_by_trial <- pupil_dilation %>%
ungroup()%>%
group_by(trial_number, recording_name, pupil_period) %>%
summarise(mean_pupil = mean(two_pupil_mean, na.rm = T)) %>%
pivot_wider(names_from = pupil_period, values_from ="mean_pupil")%>%
mutate(mean_pupil_size_difference = post_onset - baseline) %>% #difference in peak pupil points
filter(!is.na(mean_pupil_size_difference)) %>%
rename(mean_pupil_baseline = baseline,
mean_pupil_post_onset = post_onset) %>%
ungroup()
mean_dilation_by_subject <- mean_dilation_by_trial %>%
group_by(recording_name) %>%
summarise(mean_pupil_size_difference = mean(mean_pupil_size_difference)) %>%
ungroup()
#peak latency
peak_pupil_latency_by_trial <- pupil_dilation %>%
ungroup()%>%
group_by(trial_number, recording_name, pupil_period) %>%
slice(which.max(two_pupil_mean)) %>%
dplyr::select(recording_name, pupil_period, peak_time_stamp = recording_timestamp) %>%
group_by(trial_number, recording_name) %>%
summarise(peak_pupil_latency = diff(peak_time_stamp)) %>%
ungroup()
peak_pupil_latency_by_subject <- peak_pupil_latency_by_trial %>%
group_by(recording_name) %>%
summarise(peak_pupil_latency = mean(peak_pupil_latency))
first_look_duration_by_trial <- analysis_dataset %>%
ungroup() %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
group_by(recording_name, trial_number) %>%
mutate(looking_stretch_id = data.table::rleid(target)) %>%
group_by(recording_name, trial_number, looking_stretch_id) %>%
mutate(row = row_number()) %>%
mutate(where_looking = case_when(target == TRUE ~ "target",
distractor == TRUE ~ "distractor",
TRUE ~ "neither")) %>%
filter(where_looking == "target") %>%
mutate(first_look_dur = max(row_number())*(1000/60)) %>%
filter(first_look_dur >= 200) %>%
group_by(trial_number, recording_name) %>%
filter(looking_stretch_id == min(looking_stretch_id)) %>%
ungroup() %>%
distinct(recording_name, trial_number, media_name, first_look_dur) %>%
ungroup()
first_look_duration_by_subject <- first_look_duration_by_trial %>%
group_by(recording_name) %>%
summarise(first_look_dur = mean(first_look_dur, na.rm = T)) %>%
ungroup()
data_new_dvs_by_trial <- analysis_dataset %>%
distinct(recording_name, trial_number, yoked_pair, target_word, age_months, exp_to_target_lang) %>%
left_join(prop_looking_by_trial) %>%
#double check if kids see the same word more than once... if so, this item will be ducplicated in the dataset
left_join(prop_looking_diff_by_item) %>%
# commenting out for now until we verify how to do this one left_join(sampling_fixations_total %>% dplyr::select(-subject_id)) %>%
left_join(fixations_total_by_trial) %>%
left_join(prop_shifts_distractor_initial_by_trial) %>%
left_join(prop_shifts_target_initial_by_subject) %>%
left_join(RT_by_trial) %>%
left_join(number_of_switches_by_trial) %>%
left_join(mean_fixation_dur_by_trial) %>%
left_join(peak_dilation_by_trial) %>%
left_join(mean_dilation_by_trial) %>%
left_join(peak_pupil_latency_by_trial) %>%
left_join(first_look_duration_by_trial) %>%
ungroup() %>%
mutate(exp_to_target_lang_centred = (exp_to_target_lang/100)-.5,
age_months_centred = age_months - 25,
correct_shift = case_when(correct_shift == T ~ 1,
correct_shift == F ~ 0))
data_new_dvs_by_subject <- analysis_dataset %>%
distinct(recording_name, age_months, exp_to_target_lang, fre_exp, eng_exp) %>% #Added french and english exposure to be able to calculate balance for some analyses.
left_join(prop_looking_by_subject) %>%
#double check if kids see the same word more than once... if so, this item will be ducplicated in the dataset
left_join(prop_looking_diff_by_subject) %>%
# commenting out for now until we verify how to do this one left_join(sampling_fixations_total %>% dplyr::select(-subject_id)) %>%
left_join(fixations_total_by_subject) %>%
left_join(prop_shifts_distractor_initial_by_subject) %>%
left_join(prop_shifts_target_initial_by_subject) %>%
left_join(RT_by_subject) %>%
left_join(number_of_switches_by_subject) %>%
left_join(mean_fixation_dur_by_subject) %>%
left_join(peak_dilation_by_subject) %>%
left_join(mean_dilation_by_subject) %>%
left_join(peak_pupil_latency_by_subject) %>%
left_join(first_look_duration_by_subject) %>%
ungroup()%>%
mutate(exp_to_target_lang_centred = (exp_to_target_lang/100)-.5,
age_months_centred = age_months - 25)
#How many trials in average when we collapse by subject?
data_new_dvs_by_trial %>%
group_by(recording_name) %>%
summarise(num_trials = length(unique(trial_number))) %>%
summarise(avg_num_trials = mean(num_trials))
View(data_new_dvs_by_subject)
data_new_dvs_by_subject <- analysis_dataset %>%
distinct(recording_name, age_months, exp_to_target_lang, fre_exp, eng_exp, initial_look) %>% #Added french and english exposure to be able to calculate balance for some analyses. Also added initial look
left_join(prop_looking_by_subject) %>%
#double check if kids see the same word more than once... if so, this item will be ducplicated in the dataset
left_join(prop_looking_diff_by_subject) %>%
# commenting out for now until we verify how to do this one left_join(sampling_fixations_total %>% dplyr::select(-subject_id)) %>%
left_join(fixations_total_by_subject) %>%
left_join(prop_shifts_distractor_initial_by_subject) %>%
left_join(prop_shifts_target_initial_by_subject) %>%
left_join(RT_by_subject) %>%
left_join(number_of_switches_by_subject) %>%
left_join(mean_fixation_dur_by_subject) %>%
left_join(peak_dilation_by_subject) %>%
left_join(mean_dilation_by_subject) %>%
left_join(peak_pupil_latency_by_subject) %>%
left_join(first_look_duration_by_subject) %>%
ungroup()%>%
mutate(exp_to_target_lang_centred = (exp_to_target_lang/100)-.5,
age_months_centred = age_months - 25)
for_icc_distractor_initial <- data_new_dvs_by_subject %>%
filter(initial_look=="distractor") %>%
dplyr::select(where(is.numeric)) %>%
dplyr::select(-c(age_months, exp_to_target_lang, exp_to_target_lang_centred, age_months_centred, samples_target, samples_distractor))
for_icc_distractor_initial <- data_new_dvs_by_subject %>%
filter(initial_look=="distractor") %>%
dplyr::select(where(is.numeric)) %>%
dplyr::select(-c(age_months, exp_to_target_lang, exp_to_target_lang_centred, age_months_centred))
for_icc_target_initial <- data_new_dvs_by_subject %>%
filter(initial_look=="target") %>%
dplyr::select(where(is.numeric)) %>%
dplyr::select(-c(age_months, exp_to_target_lang, exp_to_target_lang_centred, age_months_centred))
View(for_icc_target_initial)
View(for_icc_distractor_initial)
unique(data_new_dvs_by_subject$initial_look)
View(data_new_dvs_by_subject)
ICC_data_nested <- data_new_dvs_by_subject_split %>%
group_by(initial_look) %>%
nest()
ICC_data_nested <- data_new_dvs_by_subject_split %>%
group_by(initial_look) %>%
nest() %>%
dplyr::select(where(is.numeric)) %>%
dplyr::select(-c(age_months, exp_to_target_lang, exp_to_target_lang_centred, age_months_centred, samples_target, samples_distractor))
ICC_data_nested <- data_new_dvs_by_subject_split %>%
group_by(initial_look) %>%
nest() %>%
dplyr::select(where(is.numeric)) %>%
dplyr::select(-c(exp_to_target_lang, exp_to_target_lang_centred, age_months_centred, samples_target, samples_distractor))
ICC_data_nested <- data_new_dvs_by_subject_split %>%
group_by(initial_look) %>%
nest() %>%
dplyr::select(where(is.numeric)) %>%
dplyr::select(-c(exp_to_target_lang_centred, age_months_centred, samples_target, samples_distractor))
library(tidyverse)
library(here)
load(here("archival_KBH_anonimyzed/arch_final.Rda"))
load(here("archival_KBH_anonimyzed/arch_final_experimental.Rda"))
kbh_experimental_clean <- arch_final_experimental %>%
group_by(studio_project_name, studio_test_name, trial_number, recording_name)%>%
mutate(trial_from_zero = recording_timestamp-min(recording_timestamp))%>%
group_by(studio_project_name)%>%
mutate(noun_onset = case_when(studio_project_name=="CompMix-36"~trial_from_zero-3000, #Substracting noun onset to normalize
studio_project_name=="LearnMix-36"~trial_from_zero-4500,
studio_project_name=="Mix-20"~trial_from_zero-5400,
studio_project_name=="Mix-14"~trial_from_zero-5400,
studio_project_name=="CogMisp-24"~trial_from_zero-1500))%>%
ungroup()%>%
rename(target_side=target, distractor_side=distractor,
gaze_point_x= gaze_point_x_adc_spx,
gaze_point_y = gaze_point_y_adc_spx)%>%
mutate(trackloss = case_when(gaze_point_x<0 ~ TRUE,
gaze_point_x> 1920 ~ TRUE,
gaze_point_y<0 ~ TRUE,
gaze_point_y > 1080 ~ TRUE,
is.na(gaze_point_x) ~ TRUE,
is.na(gaze_point_y) ~ TRUE,
is.na(validity_left) ~ TRUE,
is.na(validity_right) ~ TRUE,
validity_left > 1 ~ TRUE,
validity_right > 1 ~ TRUE,
TRUE~ FALSE)) %>% #MAKE VISUALIZATIONS ABOUT TRACKLOSS FOR SANITY CHECK
mutate(target = case_when(gaze_point_x >= target_x_min&gaze_point_x <= target_x_max&gaze_point_y >= target_y_min&gaze_point_y <= target_y_max~TRUE,
TRUE~FALSE)) %>%
mutate(distractor = case_when(gaze_point_x >= distractor_x_min&gaze_point_x <= distractor_x_max&gaze_point_y >= distractor_y_min&gaze_point_y <= distractor_y_max~TRUE,
TRUE ~ FALSE))
#Create trial language column to describe the language in which the babies were tested
kbh_experimental_clean <- kbh_experimental_clean %>%
ungroup()%>%
group_by(studio_test_name, eng_exp, fre_exp)%>%
mutate(trial_lang = case_when(str_detect(studio_test_name,"E")~ "english",
str_detect(studio_test_name, "F")~ "french")) %>%
mutate(exp_to_target_lang = case_when(trial_lang == "english" ~ eng_exp,
trial_lang == "french" ~ fre_exp)) %>%
#Make trackloss rows NA for target and distractor, since we can't say for certain where the gaze is
mutate(target = case_when(trackloss == TRUE ~ NA,
TRUE ~ target),
distractor = case_when(trackloss == TRUE ~ NA,
TRUE ~ distractor))
#Add a column with the yoked pairs information---yoking info taken from lab server
kbh_experimental_items<- kbh_experimental_clean %>%
filter(-case_when(grepl("Teelo"|"Walem", studio_test_name)))
unique(kbh_experimental_clean$media_name)
kbh_experimental_items<- kbh_experimental_clean %>%
filter(-case_when(grepl("Teelo"|"Walem", media_name)))
`%notin%` <- Negate(`%in%`)
?str_detect
kbh_experimental_items<- kbh_experimental_clean %>%
filter(media_name %notin% str_detect(media_name, "Teelo", "Walem"))
kbh_experimental_items<- kbh_experimental_clean %>%
filter(media_name %notin% str_detect(media_name, c("Teelo", "Walem")))
kbh_experimental_items<- kbh_experimental_clean %>%
filter(media_name %notin% str_detect(media_name, "Teelo"))
kbh_experimental_items<- kbh_experimental_clean %>%
filter(!grepl("Teelo|Walem", media_name))
unique(kbh_experimental_items$media_name)
kbh_experimental_items<- kbh_experimental_clean %>%
filter(!grepl("Teelo|Walem", media_name)) # Filtering the learn experiment which used non-words for the experimental condition.
kbh_experimental_items<- kbh_experimental_clean %>%
filter(!grepl("Teelo|Walem", media_name)) %>% # Filtering the learn experiment which used non-words for the experimental condition.
mutate(yoked_pair = case_when(
grepl("Monkey|Sheep", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~"monkey-sheep",
grepl("Bunny|Dog", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~"bunny-dog",
grepl("Cow|Froggy", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~"cow-froggy",
grepl("Fish|Duck", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~"fish-duck",
grepl("Fish|Duck", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~"poisson-canard",
grepl("Monkey|Sheep", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~"mouton-singe",
grepl("Bunny|Dog", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~"chien-lapin",
grepl("Cow|Froggy", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~"grenouille-vache",
grepl("banM|girM", media_name) & studio_project_name== "CogMisp-24"  ~"banana-giraffe",
grepl("monM|butM", media_name) & studio_project_name=="CogMisp-24" ~"monkey-butterfly",
grepl("winM|mouM", media_name) & studio_project_name== "CogMisp-24" ~"window-mouth",
grepl("pizM|tabM", media_name) & studio_project_name== "CogMisp-24" ~"pizza-table",
grepl("choM|bowM", media_name) & studio_project_name== "CogMisp-24" ~"chocolate-bowl",
grepl("fooM|cooM", media_name) & studio_project_name== "CogMisp-24"~"cookie-foot",
grepl("Toothbrush|Apple", media_name) & studio_project_name %in% c("Mix-20","Mix-14")  ~"toothbrush-apple",
grepl("Ear|Spoon", media_name) & studio_project_name %in% c("Mix-20","Mix-14")  ~"ear-spoon",
grepl("Mouth|Door", media_name) & studio_project_name %in% c("Mix-20","Mix-14")  ~"mouth-door",
grepl("Bird|Hand", media_name) & studio_project_name %in% c("Mix-20","Mix-14")  ~"bird-hand",
grepl("Dog|Book", media_name) & studio_project_name %in% c("Mix-20","Mix-14")  ~"dog-book",
grepl("Cookie|Foot", media_name) & studio_project_name %in% c("Mix-20","Mix-14") ~"cookie-foot",
grepl("Brosse|Pomme", media_name) & studio_project_name %in% c("Mix-20","Mix-14")  ~"pomme-brosse a dents",
grepl("Oreille|Cuillere", media_name) & studio_project_name %in% c("Mix-20","Mix-14")  ~"oreille-cuillere",
grepl("Bouche|Porte", media_name) & studio_project_name %in% c("Mix-20","Mix-14")  ~"bouche-porte",
grepl("Hand|Main", media_name) & studio_project_name %in% c("Mix-20","Mix-14")  ~"oisseau-main",
grepl("Chien|Livre", media_name) & studio_project_name %in% c("Mix-20","Mix-14")  ~"chien-livre",
grepl("Biscuit|Pied", media_name) & studio_project_name %in% c("Mix-20","Mix-14") ~"biscuit-pied",
TRUE~"OTHER"
)
)
unique(kbh_experimental_items$yoked_pair)
#Adding a column with word tested information
kbh_w_items<- kbh_w_items %>%
mutate(target_word= case_when(
grepl("monM", media_name) ~"monkey",
grepl("butM", media_name) ~"butterfly",
grepl("Door", media_name) & grepl("Mix", studio_project_name) & grepl("Eng|ENG", media_name) ~"door",
grepl("banM", media_name) ~"banana",
grepl("winM", media_name) ~"window",
grepl("pizM", media_name) ~"pizza",
grepl("fooM", media_name) ~"foot",
grepl("bowM", media_name) ~"bowl",
grepl("choM", media_name) ~"chocolate",
grepl("girM", media_name) ~"giraffe",
grepl("tabM", media_name) ~"table",
grepl("Oreille", media_name)  & grepl("Mix", studio_project_name) ~"oreille",
grepl("Cuillere", media_name)  & grepl("Mix", studio_project_name) ~"cuillere",
grepl("Chien", media_name)  & grepl("Mix", studio_project_name) ~"chien",
grepl("Biscuit", media_name)  & grepl("Mix", studio_project_name) ~"biscuit",
grepl("Bouche", media_name)  & grepl("Mix", studio_project_name)  ~"bouche",
grepl("Livre", media_name) & grepl("Mix", studio_project_name) ~"livre",
grepl("Pied", media_name)  & grepl("Mix", studio_project_name) ~"pied",
grepl("Oisseau", media_name)  & grepl("Mix", studio_project_name) ~"oisseau",
grepl("Main", media_name)  & grepl("Mix", studio_project_name) ~"main",
grepl("Porte", media_name)  & grepl("Mix", studio_project_name) ~"porte",
grepl("Brosse", media_name)  & grepl("Mix", studio_project_name) ~"brosse a dents",
grepl("Pomme", media_name)  & grepl("Mix", studio_project_name) ~"pomme",
grepl("Poisson", media_name)  & grepl("Mix", studio_project_name) ~"poisson",
grepl("Lapin", media_name)  & grepl("Mix", studio_project_name) ~"lapin",
grepl("Fish_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "poisson",
grepl("Duck_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "canard",
grepl("Monkey_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "singe",
grepl("Sheep_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "mouton",
grepl("Dog_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "chien",
grepl("Froggy_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "grenouille",
grepl("Cow_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "vache",
grepl("Bunny_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "lapin",
grepl("Fish", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "fish",
grepl("Duck", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "duck",
grepl("Monkey", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "monkey",
grepl("Sheep", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "sheep",
grepl("Dog", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "dog",
grepl("Froggy", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "froggy",
grepl("Cow", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "cow",
grepl("Ear", media_name) & grepl("Mix", studio_project_name) ~"ear",
grepl("Spoon", media_name)  & grepl("Mix", studio_project_name) ~"spoon",
grepl("Dog", media_name)  & grepl("Mix", studio_project_name) ~"dog",
grepl("Cookie", media_name)  & grepl("Mix", studio_project_name)~"cookie",
grepl("cooM", media_name) ~"cookie",
grepl("Mouth", media_name)  & grepl("Mix", studio_project_name)~"mouth",
grepl("mouM", media_name) ~"mouth",
grepl("Book", media_name)  & grepl("Mix", studio_project_name) ~"book",
grepl("Foot", media_name)  & grepl("Mix", studio_project_name) ~"foot",
grepl("fooM", media_name) ~"foot",
grepl("Bird", media_name)  & grepl("Mix", studio_project_name) ~"bird",
grepl("Hand", media_name)  & grepl("Mix", studio_project_name) ~"hand",
grepl("Toothbrush", media_name)   & grepl("Mix", studio_project_name) ~"toothbrush",
grepl("Apple", media_name)  & grepl("Mix", studio_project_name) ~"apple",
grepl("Fish", media_name)  & grepl("Mix", studio_project_name) ~"fish",
grepl("Bunny", media_name)  & grepl("Mix", studio_project_name) ~"bunny",
TRUE~"OTHER"
),
distractor_word = str_remove(yoked_pair, target_word),
distractor_word = str_remove(distractor_word, "-")
)
#Adding a column with word tested information
kbh_experimental_items<- kbh_experimental_items %>%
mutate(target_word= case_when(
grepl("monM", media_name) ~"monkey",
grepl("butM", media_name) ~"butterfly",
grepl("Door", media_name) & grepl("Mix", studio_project_name) & grepl("Eng|ENG", media_name) ~"door",
grepl("banM", media_name) ~"banana",
grepl("winM", media_name) ~"window",
grepl("pizM", media_name) ~"pizza",
grepl("fooM", media_name) ~"foot",
grepl("bowM", media_name) ~"bowl",
grepl("choM", media_name) ~"chocolate",
grepl("girM", media_name) ~"giraffe",
grepl("tabM", media_name) ~"table",
grepl("Oreille", media_name)  & grepl("Mix", studio_project_name) ~"oreille",
grepl("Cuillere", media_name)  & grepl("Mix", studio_project_name) ~"cuillere",
grepl("Chien", media_name)  & grepl("Mix", studio_project_name) ~"chien",
grepl("Biscuit", media_name)  & grepl("Mix", studio_project_name) ~"biscuit",
grepl("Bouche", media_name)  & grepl("Mix", studio_project_name)  ~"bouche",
grepl("Livre", media_name) & grepl("Mix", studio_project_name) ~"livre",
grepl("Pied", media_name)  & grepl("Mix", studio_project_name) ~"pied",
grepl("Oisseau", media_name)  & grepl("Mix", studio_project_name) ~"oisseau",
grepl("Main", media_name)  & grepl("Mix", studio_project_name) ~"main",
grepl("Porte", media_name)  & grepl("Mix", studio_project_name) ~"porte",
grepl("Brosse", media_name)  & grepl("Mix", studio_project_name) ~"brosse a dents",
grepl("Pomme", media_name)  & grepl("Mix", studio_project_name) ~"pomme",
grepl("Poisson", media_name)  & grepl("Mix", studio_project_name) ~"poisson",
grepl("Lapin", media_name)  & grepl("Mix", studio_project_name) ~"lapin",
grepl("Fish_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "poisson",
grepl("Duck_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "canard",
grepl("Monkey_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "singe",
grepl("Sheep_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "mouton",
grepl("Dog_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "chien",
grepl("Froggy_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "grenouille",
grepl("Cow_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "vache",
grepl("Bunny_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "lapin",
grepl("Fish", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "fish",
grepl("Duck", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "duck",
grepl("Monkey", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "monkey",
grepl("Sheep", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "sheep",
grepl("Dog", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "dog",
grepl("Froggy", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "froggy",
grepl("Cow", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "cow",
grepl("Ear", media_name) & grepl("Mix", studio_project_name) ~"ear",
grepl("Spoon", media_name)  & grepl("Mix", studio_project_name) ~"spoon",
grepl("Dog", media_name)  & grepl("Mix", studio_project_name) ~"dog",
grepl("Cookie", media_name)  & grepl("Mix", studio_project_name)~"cookie",
grepl("cooM", media_name) ~"cookie",
grepl("Mouth", media_name)  & grepl("Mix", studio_project_name)~"mouth",
grepl("mouM", media_name) ~"mouth",
grepl("Book", media_name)  & grepl("Mix", studio_project_name) ~"book",
grepl("Foot", media_name)  & grepl("Mix", studio_project_name) ~"foot",
grepl("fooM", media_name) ~"foot",
grepl("Bird", media_name)  & grepl("Mix", studio_project_name) ~"bird",
grepl("Hand", media_name)  & grepl("Mix", studio_project_name) ~"hand",
grepl("Toothbrush", media_name)   & grepl("Mix", studio_project_name) ~"toothbrush",
grepl("Apple", media_name)  & grepl("Mix", studio_project_name) ~"apple",
grepl("Fish", media_name)  & grepl("Mix", studio_project_name) ~"fish",
grepl("Bunny", media_name)  & grepl("Mix", studio_project_name) ~"bunny",
TRUE~"OTHER"
),
distractor_word = str_remove(yoked_pair, target_word),
distractor_word = str_remove(distractor_word, "-")
)
kbh_experimental_items <- kbh_experimental_items %>% ungroup()
save(kbh_experimental_items, file = here("archival_KBH_anonimyzed/kbh_experimental_items.Rda"))
