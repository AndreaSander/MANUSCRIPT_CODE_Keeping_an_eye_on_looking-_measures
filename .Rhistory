geom_vline(xintercept=0, linetype="dashed", colour="gray28") +
stat_summary(fun.data=mean_cl_boot, aes(fill=aoi),
geom="ribbon", alpha=.2, linetype="blank") +
stat_summary(fun=mean, geom="path",
aes(group=aoi, linetype=aoi), size=.7) +
geom_point(data = plot_points, color = "black", aes(shape = plot_points$correction))
overall_divergence_plot <- ggplot(divergence_plot_data, aes(x=parallel_timestamp, y=mean_fixation, colour=aoi)) +
geom_vline(xintercept=0, linetype="dashed", colour="gray28") +
stat_summary(fun.data=mean_cl_boot, aes(fill=aoi),
geom="ribbon", alpha=.2, linetype="blank") +
stat_summary(fun=mean, geom="path",
aes(group=aoi, linetype=aoi), size=.7) +
geom_point(data = plot_points, color = "black", aes(shape = plot_points$correction))
plot_points <- tibble(correction = rep(c("Uncorrected", "Bonferroni", "FDR"), 3),
parallel_timestamp = c(uncorr$parallel_timestamp, bnf$parallel_timestamp, fdr$parallel_timestamp),
mean_fixation = .5,
aoi = "target")
View(plot_points)
overall_divergence_plot <- ggplot(divergence_plot_data, aes(x=parallel_timestamp, y=mean_fixation, colour=aoi)) +
geom_vline(xintercept=0, linetype="dashed", colour="gray28") +
stat_summary(fun.data=mean_cl_boot, aes(fill=aoi),
geom="ribbon", alpha=.2, linetype="blank") +
stat_summary(fun=mean, geom="path",
aes(group=aoi, linetype=aoi), size=.7) +
geom_point(data = plot_points, color = "black", aes(shape = plot_points$correction))
overall_divergence_plot
overall_divergence_plot <- ggplot(divergence_plot_data, aes(x=parallel_timestamp, y=mean_fixation, colour=aoi)) +
geom_vline(xintercept=0, linetype="dashed", colour="gray28") +
stat_summary(fun.data=mean_cl_boot, aes(fill=aoi),
geom="ribbon", alpha=.2, linetype="blank") +
stat_summary(fun=mean, geom="path",
aes(group=aoi, linetype=aoi), size=.7) +
facet_wrap(~age_group) +
geom_point(data = plot_points, color = "black", aes(shape = plot_points$correction))
overall_divergence_plot
plot_points <- tibble(correction = rep(c("Uncorrected", "Bonferroni", "FDR"), 3),
age_group = c(rep("14-20", 3), rep("21-30", 3), rep("31-48", 3)),
parallel_timestamp = c(uncorr$parallel_timestamp, bnf$parallel_timestamp, fdr$parallel_timestamp),
mean_fixation = .5,
aoi = "target")
plot_points <- tibble(correction = rep(c("Uncorrected", "Bonferroni", "FDR"), 3),
age_group = c("14-20", "21-30", "31-48"),
parallel_timestamp = c(uncorr$parallel_timestamp, bnf$parallel_timestamp, fdr$parallel_timestamp),
mean_fixation = .5,
aoi = "target")
plot_points <- tibble(correction = c("Uncorrected", "Bonferroni", "FDR"),
age_group = c("14-20", "21-30", "31-48"),
parallel_timestamp = c(uncorr$parallel_timestamp, bnf$parallel_timestamp, fdr$parallel_timestamp),
mean_fixation = .5,
aoi = "target")
plot_points <- tibble(correction = rep(c("Uncorrected", "Bonferroni", "FDR"), 3),
age_group = rep(c("14-20", "21-30", "31-48")3),
plot_points <- tibble(correction = rep(c("Uncorrected", "Bonferroni", "FDR"), 3),
age_group = rep(c("14-20", "21-30", "31-48"),3),
parallel_timestamp = c(uncorr$parallel_timestamp, bnf$parallel_timestamp, fdr$parallel_timestamp),
mean_fixation = .5,
aoi = "target")
plot_points <- tibble(correction = c(rep("Uncorrected", 3), rep("Bonferroni", 3), rep("FDR", 3)),
age_group = rep(c("14-20", "21-30", "31-48"),3),
parallel_timestamp = c(uncorr$parallel_timestamp, bnf$parallel_timestamp, fdr$parallel_timestamp),
mean_fixation = .5,
aoi = "target")
overall_divergence_plot <- ggplot(divergence_plot_data, aes(x=parallel_timestamp, y=mean_fixation, colour=aoi)) +
geom_vline(xintercept=0, linetype="dashed", colour="gray28") +
stat_summary(fun.data=mean_cl_boot, aes(fill=aoi),
geom="ribbon", alpha=.2, linetype="blank") +
stat_summary(fun=mean, geom="path",
aes(group=aoi, linetype=aoi), size=.7) +
facet_wrap(~age_group) +
geom_point(data = plot_points, color = "black", aes(shape = plot_points$correction))
overall_divergence_plot
View(divergence_point)
View(divergence_point_stat)
#Apply statistical test to each time point for each kid
divergence_p_table_by_subject <- divergence_point_stat %>%
# select only rows in the dataframe where a fixation occurred
filter(value == 1) %>%
# label fixations that were on the target as 1 and as 0 otherwise,
mutate(looking_to_target = ifelse(aoi == "target", 1, 0)) %>%
# we want to test for each timepoint at each age group
group_by(parallel_timestamp, age_group, recording_name) %>%
# apply logistic regression and extract z-values
summarise(z = summary(lme4::glmer(looking_to_target ~ 1 +
(1|recording_name), family="binomial",
control=lme4::glmerControl(calc.derivs=FALSE)))$coefficients[1,3]) %>%
# add p-values
mutate(p = pnorm(-abs(z))*2)
#Apply statistical test to each time point for each kid
divergence_p_table_by_subject <- divergence_point_stat %>%
# select only rows in the dataframe where a fixation occurred
filter(value == 1) %>%
# label fixations that were on the target as 1 and as 0 otherwise,
mutate(looking_to_target = ifelse(aoi == "target", 1, 0)) %>%
# we want to test for each timepoint at each age group
group_by(parallel_timestamp, recording_name) %>%
# apply logistic regression and extract z-values
summarise(z = summary(lme4::glmer(looking_to_target ~ 1 +
(1|recording_name), family="binomial",
control=lme4::glmerControl(calc.derivs=FALSE)))$coefficients[1,3]) %>%
# add p-values
mutate(p = pnorm(-abs(z))*2)
?gml
?glm
#Apply statistical test to each time point for each kid
divergence_p_table_by_subject <- divergence_point_stat %>%
# select only rows in the dataframe where a fixation occurred
filter(value == 1) %>%
# label fixations that were on the target as 1 and as 0 otherwise,
mutate(looking_to_target = ifelse(aoi == "target", 1, 0)) %>%
# we want to test for each timepoint for each subject
group_by(parallel_timestamp, recording_name) %>%
# apply logistic regression and extract z-values
summarise(z = summary(glm(looking_to_target ~ 1, family="binomial",
control=lme4::glmerControl(calc.derivs=FALSE)))$coefficients[1,3]) %>%
# add p-values
mutate(p = pnorm(-abs(z))*2)
# apply logistic regression and extract z-values
summarise(z = summary(glm(looking_to_target ~ 1, family="binomial") %>%
#Apply statistical test to each time point for each kid
divergence_p_table_by_subject <- divergence_point_stat %>%
# select only rows in the dataframe where a fixation occurred
filter(value == 1) %>%
# label fixations that were on the target as 1 and as 0 otherwise,
mutate(looking_to_target = ifelse(aoi == "target", 1, 0)) %>%
# we want to test for each timepoint for each subject
group_by(parallel_timestamp, recording_name) %>%
# apply logistic regression and extract z-values
summarise(z = summary(glm(looking_to_target ~ 1, family="binomial"))) %>%
# add p-values
mutate(p = pnorm(-abs(z))*2)
#Apply statistical test to each time point for each kid
divergence_p_table_by_subject <- divergence_point_stat %>%
# select only rows in the dataframe where a fixation occurred
filter(value == 1) %>%
# label fixations that were on the target as 1 and as 0 otherwise,
mutate(looking_to_target = ifelse(aoi == "target", 1, 0)) %>%
# we want to test for each timepoint for each subject
group_by(parallel_timestamp, recording_name) %>%
# apply logistic regression and extract z-values
summarise(z = summary(glm(looking_to_target ~ 1, family="binomial"))$coefficients[1,3]) %>%
# add p-values
mutate(p = pnorm(-abs(z))*2)
View(divergence_p_table_by_subject)
# Find the earliest timepoint with a significant uncorrected p-value
(uncorr_by_subject <- divergence_p_table_by_subject %>%
group_by(recording_name) %>%
# extract positive z-scores ("target advantage") and significant p-values
filter(z > 0, p < alpha) %>%
# extract the earliest significant p-value and its timepoint
slice(1))
# Find the earliest timepoint that survives the Bonferroni correction
(bnf_by_subject <- divergence_p_table_by_subject %>%
group_by(recording_name) %>%
filter(z > 0, p < alpha_corrected) %>%
slice(1))
# Find the earliest timepoint after FDR control
(fdr_by_subject <- divergence_p_table_by_subject %>%
group_by(recording_name) %>%
# apply FDR control from `stats` package
mutate(p_fdr = stats::p.adjust(p, method = "BY", n = length(p))) %>%
filter(z > 0, p_fdr < alpha) %>%
slice(1))
View(uncorr_by_subject)
View(bnf_by_subject)
View(fdr)
View(bnf)
# Find the earliest timepoint that survives the Bonferroni correction
(bnf_by_subject <- divergence_p_table %>%
group_by(recording_name) %>%
filter(z > 0, p < alpha_corrected) %>%
slice(1))
# Find the earliest timepoint that survives the Bonferroni correction
(bnf_by_subject <- divergence_p_table_by_subject %>%
group_by(recording_name) %>%
filter(z > 0, p < alpha_corrected) %>%
slice(1))
N_tests
View(divergence_p_table_by_subject)
alpha_corrected
min(divergence_p_table_by_subject$p)
divergence_plot_data %>% filter(recording_name %in% c("ggplot(divergence_plot_data, aes(x=parallel_timestamp, y=mean_fixation, colour=aoi)) +
geom_vline(xintercept=0, linetype="dashed", colour="gray28") +
stat_summary(fun.data=mean_cl_boot, aes(fill=aoi),
geom="ribbon", alpha=.2, linetype="blank") +
stat_summary(fun=mean, geom="path",
aes(group=aoi, linetype=aoi), size=.7) +
facet_wrap(~age_group) +
geom_point(data = plot_points, color = "black", aes(shape = plot_points$correction))", "CogMisp24_S16_528516000", "CompMix36_S06_93168000_E1")) %>% ggplot(aes(x=parallel_timestamp, y=mean_fixation, colour=aoi)) +
geom_vline(xintercept=0, linetype="dashed", colour="gray28") +
stat_summary(fun.data=mean_cl_boot, aes(fill=aoi),
geom="ribbon", alpha=.2, linetype="blank") +
stat_summary(fun=mean, geom="path",
aes(group=aoi, linetype=aoi), size=.7) + facet_wrap(~recording_name)
divergence_plot_data %>% filter(recording_name %in% c("CogMisp24_S16_528516000", "CompMix36_S06_93168000_E1", "CompMix36_S24_545388000_F2") %>% ggplot(aes(x=parallel_timestamp, y=mean_fixation, colour=aoi)) +
geom_vline(xintercept=0, linetype="dashed", colour="gray28") +
stat_summary(fun.data=mean_cl_boot, aes(fill=aoi),
geom="ribbon", alpha=.2, linetype="blank") +
stat_summary(fun=mean, geom="path",
aes(group=aoi, linetype=aoi), size=.7) +
facet_wrap(~age_group) +
geom_point(data = plot_points, color = "black", aes(shape = plot_points$correction)))) %>% ggplot(aes(x=parallel_timestamp, y=mean_fixation, colour=aoi)) +
geom_vline(xintercept=0, linetype="dashed", colour="gray28") +
stat_summary(fun.data=mean_cl_boot, aes(fill=aoi),
geom="ribbon", alpha=.2, linetype="blank") +
stat_summary(fun=mean, geom="path",
aes(group=aoi, linetype=aoi), size=.7) + facet_wrap(~recording_name)
divergence_plot_data %>% filter(recording_name %in% c("CogMisp24_S16_528516000", "CompMix36_S06_93168000_E1", "CompMix36_S24_545388000_F2") %>% ggplot(aes(x=parallel_timestamp, y=mean_fixation, colour=aoi)) +
geom_vline(xintercept=0, linetype="dashed", colour="gray28") +
stat_summary(fun.data=mean_cl_boot, aes(fill=aoi),
geom="ribbon", alpha=.2, linetype="blank") +
stat_summary(fun=mean, geom="path",
aes(group=aoi, linetype=aoi), size=.7) + facet_wrap(~recording_name) +
geom_point(data = plot_points, color = "black", aes(shape = plot_points$correction)))) %>% ggplot(aes(x=parallel_timestamp, y=mean_fixation, colour=aoi)) +
geom_vline(xintercept=0, linetype="dashed", colour="gray28") +
stat_summary(fun.data=mean_cl_boot, aes(fill=aoi),
geom="ribbon", alpha=.2, linetype="blank") +
stat_summary(fun=mean, geom="path",
aes(group=aoi, linetype=aoi), size=.7)
divergence_plot_data %>% filter(recording_name %in% c("CogMisp24_S16_528516000", "CompMix36_S06_93168000_E1", "CompMix36_S24_545388000_F2") %>% ggplot(aes(x=parallel_timestamp, y=mean_fixation, colour=aoi)) +
geom_vline(xintercept=0, linetype="dashed", colour="gray28") +
stat_summary(fun.data=mean_cl_boot, aes(fill=aoi),
geom="ribbon", alpha=.2, linetype="blank") +
stat_summary(fun=mean, geom="path",
aes(group=aoi, linetype=aoi), size=.7) + facet_wrap(~recording_name) +
geom_vline(xintercept=0, linetype="dashed", colour="gray28") +
stat_summary(fun.data=mean_cl_boot, aes(fill=aoi),
geom="ribbon", alpha=.2, linetype="blank") +
stat_summary(fun=mean, geom="path",
aes(group=aoi, linetype=aoi), size=.7)
divergence_plot_data %>% filter(recording_name %in% c("CogMisp24_S16_528516000", "CompMix36_S06_93168000_E1", "CompMix36_S24_545388000_F2")) %>% ggplot(aes(x=parallel_timestamp, y=mean_fixation, colour=aoi)) +
geom_vline(xintercept=0, linetype="dashed", colour="gray28") +
stat_summary(fun.data=mean_cl_boot, aes(fill=aoi),
geom="ribbon", alpha=.2, linetype="blank") +
stat_summary(fun=mean, geom="path",
aes(group=aoi, linetype=aoi), size=.7) + facet_wrap(~recording_name) +
geom_vline(xintercept=0, linetype="dashed", colour="gray28") +
stat_summary(fun.data=mean_cl_boot, aes(fill=aoi),
geom="ribbon", alpha=.2, linetype="blank") +
stat_summary(fun=mean, geom="path",
aes(group=aoi, linetype=aoi), size=.7)
divergence_plot_data %>% filter(recording_name %in% c("CogMisp24_S16_528516000", "CompMix36_S06_93168000_E1", "CompMix36_S24_545388000_F2")) %>% count(recording_name, trial_number)
View(divergence_plot_data)
divergence_point %>% filter(recording_name %in% c("CogMisp24_S16_528516000", "CompMix36_S06_93168000_E1", "CompMix36_S24_545388000_F2")) %>% count(recording_name, trial_number)
divergence_point %>% filter(recording_name %in% c("CogMisp24_S16_528516000", "CompMix36_S06_93168000_E1", "CompMix36_S24_545388000_F2")) %>% group_by(recording_name) %>% summarise(n_trials = length(unique(trial_number)))
divergence_point %>% group_by(recording_name) %>% summarise(n_trials = length(unique(trial_number)))
divergence_point %>% group_by(recording_name) %>% summarise(n_trials = length(unique(trial_number))) %>% arrange(n_trials)
divergence_plot_data %>% filter(recording_name %in% c("Mix_20_S52", "CogMisp24_S65_555408000", "LearnMix36_S20_85212000_F2")) %>% ggplot(aes(x=parallel_timestamp, y=mean_fixation, colour=aoi)) +
geom_vline(xintercept=0, linetype="dashed", colour="gray28") +
stat_summary(fun.data=mean_cl_boot, aes(fill=aoi),
geom="ribbon", alpha=.2, linetype="blank") +
stat_summary(fun=mean, geom="path",
aes(group=aoi, linetype=aoi), size=.7) + facet_wrap(~recording_name) +
geom_vline(xintercept=0, linetype="dashed", colour="gray28") +
stat_summary(fun.data=mean_cl_boot, aes(fill=aoi),
geom="ribbon", alpha=.2, linetype="blank") +
stat_summary(fun=mean, geom="path",
aes(group=aoi, linetype=aoi), size=.7)
divergence_plot_data %>% filter(recording_name %in% c("CogMisp24_S16_528516000", "CompMix36_S06_93168000_E1", "CompMix36_S24_545388000_F2")) %>% ggplot(aes(x=parallel_timestamp, y=mean_fixation, colour=aoi)) +
geom_vline(xintercept=0, linetype="dashed", colour="gray28") +
stat_summary(fun.data=mean_cl_boot, aes(fill=aoi),
geom="ribbon", alpha=.2, linetype="blank") +
stat_summary(fun=mean, geom="path",
aes(group=aoi, linetype=aoi), size=.7) + facet_wrap(~recording_name) +
geom_vline(xintercept=0, linetype="dashed", colour="gray28") +
stat_summary(fun.data=mean_cl_boot, aes(fill=aoi),
geom="ribbon", alpha=.2, linetype="blank") +
stat_summary(fun=mean, geom="path",
aes(group=aoi, linetype=aoi), size=.7)
pupil_dilation <- kbh_w_items %>%
ungroup() %>%
filter(noun_onset>= -200 & noun_onset <= 500)%>%
mutate(pupil_period = case_when(noun_onset >= -200 & noun_onset <= 0 ~ "baseline",
TRUE ~ "post_onset"))%>%
select(recording_timestamp, subject_id, recording_name, trial_number, media_name, pupil_period, pupil_right, pupil_left) %>%
mutate(two_pupil_mean = case_when(is.na(pupil_left) & is.na(pupil_right) ~ NA,
is.na(pupil_left)  ~ pupil_right,
is.na(pupil_right) ~ pupil_left,
TRUE ~ (pupil_left + pupil_right)/2)) %>%
filter(!is.na(two_pupil_mean))
#Peak dilation
peak_dilation <- pupil_dilation %>%
ungroup()%>%
group_by(recording_name, trial_number, media_name, pupil_period) %>%
summarise(peak_pupil = max(two_pupil_mean)) %>%
pivot_wider(names_from = pupil_period, values_from ="peak_pupil")%>%
mutate(peak_pupil_size_difference = post_onset - baseline) %>% #difference in peak pupil points
filter(!is.na(peak_pupil_size_difference)) %>%
rename(max_pupil_baseline = baseline,
max_pupil_post_onset = post_onset)
#Mean dilation
mean_dilation <- pupil_dilation %>%
ungroup()%>%
group_by(recording_name, trial_number, media_name, pupil_period) %>%
summarise(mean_pupil = mean(two_pupil_mean, na.rm = T)) %>%
pivot_wider(names_from = pupil_period, values_from ="mean_pupil")%>%
mutate(mean_pupil_size_difference = post_onset - baseline) %>% #difference in peak pupil points
filter(!is.na(mean_pupil_size_difference)) %>%
rename(mean_pupil_baseline = baseline,
mean_pupil_post_onset = post_onset)
#peak latency
peak_pupil_latency <- pupil_dilation %>%
ungroup()%>%
group_by(recording_name, media_name, pupil_period, trial_number) %>%
slice(which.max(two_pupil_mean)) %>%
select(recording_name, media_name, pupil_period, peak_time_stamp = recording_timestamp) %>%
group_by(recording_name, trial_number, media_name) %>%
summarise(peak_pupil_latency = diff(peak_time_stamp))
first_look_duration <- kbh_w_items %>%
ungroup() %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
group_by(recording_name, trial_number) %>%
mutate(looking_stretch_id = data.table::rleid(target)) %>%
group_by(recording_name, trial_number, looking_stretch_id) %>%
mutate(row = row_number()) %>%
mutate(where_looking = case_when(target == TRUE ~ "target",
distractor == TRUE ~ "distractor",
TRUE ~ "neither")) %>%
filter(where_looking == "target") %>%
mutate(first_look_dur = max(row_number())*(1000/60)) %>%
filter(first_look_dur >= 200) %>%
group_by(recording_name, trial_number) %>%
filter(looking_stretch_id == min(looking_stretch_id)) %>%
ungroup() %>%
distinct(recording_name, trial_number, media_name, first_look_dur)
View(kbh_w_items)
View(prop_looking)
data_new_dvs <- kbh_w_items %>%
distinct(recording_name, media_name, age_in_months, exp_to_target_lang , target_word, yoked_pair) %>%
left_join(prop_looking %>% select(-subject_id))
data_new_dvs <- kbh_w_items %>%
distinct(recording_name, media_name, age_months, exp_to_target_lang , target_word, yoked_pair) %>%
left_join(prop_looking %>% select(-subject_id))
library(tidylog)
data_new_dvs <- kbh_w_items %>%
distinct(recording_name, media_name, age_months, exp_to_target_lang , target_word, yoked_pair) %>%
left_join(prop_looking %>% select(-subject_id))
View(prop_looking_diff)
data_new_dvs <- kbh_w_items %>%
distinct(recording_name, media_name, age_months, exp_to_target_lang , target_word, yoked_pair) %>%
left_join(prop_looking %>% select(-subject_id, -samples_target, -samples_distractor)) %>%
left_join(prop_looking_diff)
View(data_new_dvs)
View(sampling_fixations_total)
sampling_fixations_total <- kbh_w_items %>%
ungroup() %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
group_by(recording_name, trial_number) %>%
mutate(trackloss_group_id = data.table::rleid(trackloss)) %>%
group_by(trackloss_group_id, recording_name, trial_number) %>%
mutate(num_consec_trackloss_rows = n()) %>%
ungroup() %>%
filter(trackloss == FALSE | (trackloss == TRUE & num_consec_trackloss_rows >= 2)) %>%
group_by(recording_name, trial_number) %>%
mutate(looking_stretch_id = data.table::rleid(target)) %>%
group_by(recording_name, trial_number, looking_stretch_id) %>%
mutate(row = row_number(),
multi_of_twelve = case_when(row %% 12 == 0 & target == TRUE ~ "fixation")) %>%
group_by(recording_name, subject_id, trial_number, media_name) %>%
summarise(number_sampling_fixations = sum(multi_of_twelve == "fixation", na.rm = T)) %>%
ungroup()
data_new_dvs <- kbh_w_items %>%
distinct(recording_name, media_name, age_months, exp_to_target_lang , target_word, yoked_pair) %>%
left_join(prop_looking %>% select(-subject_id, -samples_target, -samples_distractor)) %>%
#double check if kids see the same word more than once... if so, this item will be ducplicated in the dataset
left_join(prop_looking_diff) %>%
left_join(sampling_fixations_total %>% select(-subject_id))
View(fixations_total)
data_new_dvs <- kbh_w_items %>%
distinct(recording_name, media_name, age_months, exp_to_target_lang , target_word, yoked_pair) %>%
left_join(prop_looking %>% select(-subject_id, -samples_target, -samples_distractor)) %>%
#double check if kids see the same word more than once... if so, this item will be ducplicated in the dataset
left_join(prop_looking_diff) %>%
left_join(sampling_fixations_total %>% select(-subject_id)) %>%
left_join(fixations_total %>% select(-subject_id))
View(first_shift_target)
View(prop_shifts_distractor_initial)
data_new_dvs <- kbh_w_items %>%
distinct(recording_name, media_name, age_months, exp_to_target_lang , target_word, yoked_pair) %>%
left_join(prop_looking %>% select(-subject_id, -samples_target, -samples_distractor)) %>%
#double check if kids see the same word more than once... if so, this item will be ducplicated in the dataset
left_join(prop_looking_diff) %>%
left_join(sampling_fixations_total %>% select(-subject_id)) %>%
left_join(fixations_total %>% select(-subject_id)) %>%
left_join(prop_shifts_distractor_initial) %>%
left_join(prop_shifts_target_initial)
View(RT)
data_new_dvs <- kbh_w_items %>%
distinct(recording_name, media_name, age_months, exp_to_target_lang , target_word, yoked_pair) %>%
left_join(prop_looking %>% select(-subject_id, -samples_target, -samples_distractor)) %>%
#double check if kids see the same word more than once... if so, this item will be ducplicated in the dataset
left_join(prop_looking_diff) %>%
left_join(sampling_fixations_total %>% select(-subject_id)) %>%
left_join(fixations_total %>% select(-subject_id)) %>%
left_join(prop_shifts_distractor_initial) %>%
left_join(prop_shifts_target_initial) %>%
left_join(RT %>% select(recording_name, trial_number, latency_to_switch))
View(number_of_switches)
data_new_dvs <- kbh_w_items %>%
distinct(recording_name, media_name, age_months, exp_to_target_lang , target_word, yoked_pair) %>%
left_join(prop_looking %>% select(-subject_id, -samples_target, -samples_distractor)) %>%
#double check if kids see the same word more than once... if so, this item will be ducplicated in the dataset
left_join(prop_looking_diff) %>%
left_join(sampling_fixations_total %>% select(-subject_id)) %>%
left_join(fixations_total %>% select(-subject_id)) %>%
left_join(prop_shifts_distractor_initial) %>%
left_join(prop_shifts_target_initial) %>%
left_join(RT %>% select(recording_name, trial_number, latency_to_switch)) %>%
left_join(number_of_switches %>% selet(-subject_id))
data_new_dvs <- kbh_w_items %>%
distinct(recording_name, media_name, age_months, exp_to_target_lang , target_word, yoked_pair) %>%
left_join(prop_looking %>% select(-subject_id, -samples_target, -samples_distractor)) %>%
#double check if kids see the same word more than once... if so, this item will be ducplicated in the dataset
left_join(prop_looking_diff) %>%
left_join(sampling_fixations_total %>% select(-subject_id)) %>%
left_join(fixations_total %>% select(-subject_id)) %>%
left_join(prop_shifts_distractor_initial) %>%
left_join(prop_shifts_target_initial) %>%
left_join(RT %>% select(recording_name, trial_number, latency_to_switch)) %>%
left_join(number_of_switches %>% select(-subject_id))
View(prop_shifts_target_initial)
data_new_dvs <- kbh_w_items %>%
distinct(recording_name, media_name, age_months, exp_to_target_lang , target_word, yoked_pair) %>%
left_join(prop_looking %>% select(-subject_id, -samples_target, -samples_distractor)) %>%
#double check if kids see the same word more than once... if so, this item will be ducplicated in the dataset
left_join(prop_looking_diff) %>%
left_join(sampling_fixations_total %>% select(-subject_id)) %>%
left_join(fixations_total %>% select(-subject_id)) %>%
left_join(prop_shifts_distractor_initial) %>%
left_join(prop_shifts_target_initial) %>%
left_join(RT %>% ungroup() %>% select(recording_name, trial_number, latency_to_switch)) %>%
left_join(number_of_switches %>% select(-subject_id))
View(mean_fixation_dur)
data_new_dvs <- kbh_w_items %>%
distinct(recording_name, media_name, age_months, exp_to_target_lang , target_word, yoked_pair) %>%
left_join(prop_looking %>% select(-subject_id, -samples_target, -samples_distractor)) %>%
#double check if kids see the same word more than once... if so, this item will be ducplicated in the dataset
left_join(prop_looking_diff) %>%
left_join(sampling_fixations_total %>% select(-subject_id)) %>%
left_join(fixations_total %>% select(-subject_id)) %>%
left_join(prop_shifts_distractor_initial) %>%
left_join(prop_shifts_target_initial) %>%
left_join(RT %>% ungroup() %>% select(recording_name, trial_number, latency_to_switch)) %>%
left_join(number_of_switches %>% select(-subject_id)) %>%
left_join(mean_fixation_dur)
View(peak_dilation)
data_new_dvs <- kbh_w_items %>%
distinct(recording_name, media_name, age_months, exp_to_target_lang , target_word, yoked_pair) %>%
left_join(prop_looking %>% select(-subject_id, -samples_target, -samples_distractor)) %>%
#double check if kids see the same word more than once... if so, this item will be ducplicated in the dataset
left_join(prop_looking_diff) %>%
left_join(sampling_fixations_total %>% select(-subject_id)) %>%
left_join(fixations_total %>% select(-subject_id)) %>%
left_join(prop_shifts_distractor_initial) %>%
left_join(prop_shifts_target_initial) %>%
left_join(RT %>% ungroup() %>% select(recording_name, trial_number, latency_to_switch)) %>%
left_join(number_of_switches %>% select(-subject_id)) %>%
left_join(mean_fixation_dur) %>%
left_join(peak_dilation %>% select(-contains("max")))
View(mean_dilation)
data_new_dvs <- kbh_w_items %>%
distinct(recording_name, media_name, age_months, exp_to_target_lang , target_word, yoked_pair) %>%
left_join(prop_looking %>% select(-subject_id, -samples_target, -samples_distractor)) %>%
#double check if kids see the same word more than once... if so, this item will be ducplicated in the dataset
left_join(prop_looking_diff) %>%
left_join(sampling_fixations_total %>% select(-subject_id)) %>%
left_join(fixations_total %>% select(-subject_id)) %>%
left_join(prop_shifts_distractor_initial) %>%
left_join(prop_shifts_target_initial) %>%
left_join(RT %>% ungroup() %>% select(recording_name, trial_number, latency_to_switch)) %>%
left_join(number_of_switches %>% select(-subject_id)) %>%
left_join(mean_fixation_dur) %>%
left_join(peak_dilation %>% select(-contains("max"))) %>%
left_join(mean_dilation %>% select(-mean_pupil_baseline, -mean_pupil_post_onset))
View(peak_pupil_latency)
View(first_look_duration)
data_new_dvs <- kbh_w_items %>%
distinct(recording_name, media_name, age_months, exp_to_target_lang , target_word, yoked_pair) %>%
left_join(prop_looking %>% select(-subject_id, -samples_target, -samples_distractor)) %>%
#double check if kids see the same word more than once... if so, this item will be ducplicated in the dataset
left_join(prop_looking_diff) %>%
left_join(sampling_fixations_total %>% select(-subject_id)) %>%
left_join(fixations_total %>% select(-subject_id)) %>%
left_join(prop_shifts_distractor_initial) %>%
left_join(prop_shifts_target_initial) %>%
left_join(RT %>% ungroup() %>% select(recording_name, trial_number, latency_to_switch)) %>%
left_join(number_of_switches %>% select(-subject_id)) %>%
left_join(mean_fixation_dur) %>%
left_join(peak_dilation %>% select(-contains("max"))) %>%
left_join(mean_dilation %>% select(-mean_pupil_baseline, -mean_pupil_post_onset)) %>%
left_join(peak_pupil_latency) %>%
left_join(first_look_duration) %>%
ungroup()
?cor
#PEARSON CORRELATION
for_correlation<- data_new_dvs %>%
select(where(is.numeric))
View(for_correlation)
#PEARSON CORRELATION
for_correlation<- data_new_dvs %>%
select(where(is.numeric)) %>%
select(-trial_number)
kbh_correlation <- cor(x=for_correlation, use="complete.obs")
?rcorr
coorelation_for_p<- rcorr(as.matrix(for_correlation))
corrplot(kbh_correlation)
correlation_for_p<- rcorr(as.matrix(for_correlation))
View(correlation_for_p)
correlation_for_p$P %>% View()
options(scipen = 999)
correlation_for_p$P %>% View()
kbh_correlation_s <- cor(x=for_correlation, use="complete.obs", method = "spearman")
corrplot(kbh_correlation_s)
