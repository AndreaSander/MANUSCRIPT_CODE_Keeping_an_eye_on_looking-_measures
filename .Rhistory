library(here)
library(dplyr)
library(stringr)
library(Hmisc)
library(corrplot)
library(zoo)
library(tidyverse)
library(eyetrackingR)
load(here("archival_KBH_anonimyzed/arch_final.Rda"))
kbh_data_clean <- arch_final%>%
group_by(studio_project_name, studio_test_name, trial_number, recording_name)%>%
mutate(trial_from_zero = recording_timestamp-min(recording_timestamp))%>%
group_by(studio_project_name)%>%
mutate(noun_onset = case_when(studio_project_name=="CompMix-36"~trial_from_zero-3000, #Substracting noun onset to normalize
studio_project_name=="LearnMix-36"~trial_from_zero-4500,
studio_project_name=="Mix-20"~trial_from_zero-5400,
studio_project_name=="Mix-14"~trial_from_zero-5400,
studio_project_name=="CogMisp-24"~trial_from_zero-1500))%>%
ungroup()%>%
rename(target_side=target, distractor_side=distractor,
gaze_point_x= gaze_point_x_adc_spx,
gaze_point_y = gaze_point_y_adc_spx)%>%
mutate(trackloss = case_when(gaze_point_x<0 ~ TRUE,
gaze_point_x> 1920 ~ TRUE,
gaze_point_y<0 ~ TRUE,
gaze_point_y > 1080 ~ TRUE,
is.na(gaze_point_x) ~ TRUE,
is.na(gaze_point_y) ~ TRUE,
is.na(validity_left) ~ TRUE,
is.na(validity_right) ~ TRUE,
validity_left > 1 ~ TRUE,
validity_right > 1 ~ TRUE,
TRUE~ FALSE)) %>% #MAKE VISUALIZATIONS ABOUT TRACKLOSS FOR SANITY CHECK
mutate(target = case_when(gaze_point_x >= target_x_min&gaze_point_x <= target_x_max&gaze_point_y >= target_y_min&gaze_point_y <= target_y_max~TRUE,
TRUE~FALSE)) %>%
mutate(distractor = case_when(gaze_point_x >= distractor_x_min&gaze_point_x <= distractor_x_max&gaze_point_y >= distractor_y_min&gaze_point_y <= distractor_y_max~TRUE,
TRUE ~ FALSE))
#Create trial language column to describe the language in which the babies were tested
kbh_data_clean <- kbh_data_clean %>%
ungroup()%>%
group_by(studio_test_name, eng_exp, fre_exp)%>%
mutate(trial_lang = case_when(str_detect(studio_test_name,"E")~ "english",
str_detect(studio_test_name, "F")~ "french")) %>%
mutate(exp_to_target_lang = case_when(trial_lang == "english" ~ eng_exp,
trial_lang == "french" ~ fre_exp)) %>%
#Make trackloss rows NA for target and distractor, since we can't say for certain where the gaze is
mutate(target = case_when(trackloss == TRUE ~ NA,
TRUE ~ target),
distractor = case_when(trackloss == TRUE ~ NA,
TRUE ~ distractor))
#Add a column with the yoked pairs information---yoking info taken from lab server
kbh_w_items<- kbh_data_clean %>%
mutate(yoked_pair = case_when(
grepl("Ear|Spoon", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~"ear-spoon",
grepl("Apple|Toothbrush", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~"apple-toothbrush",
grepl("Fish|Duck", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~"fish-duck",
grepl("Sheep|Monkey", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~"sheep-monkey",
grepl("Dog|Bunny", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~"dog-bunny",
grepl("Hand|Door", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~"hand-door",
grepl("Pencil|Coat", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~"pencil-coat",
grepl("Froggy|Cow", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~"froggy-cow",
grepl("Ear|Spoon", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~"oreille-cuillere",
grepl("Apple|Toothbrush", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~"pomme-brosse a dents",
grepl("Fish|Duck", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~"poisson-canard",
grepl("Sheep|Monkey", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~"mouton-singe",
grepl("Dog|Bunny", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~"chien-lapin",
grepl("Hand|Door", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~"main-porte",
grepl("Pencil|Coat", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~"crayon-manteau",
grepl("Froggy|Cow", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~"grenouille-vache",
studio_project_name== "LearnMix-36"& media_name %in%
c("FR_Single_ChienWalem_R.wmv", "FR_Single_LapinWalem_L.wmv", "FR_Single_LapinTeelo_R.wmv", "FR_Single_ChienTeelo_L.wmv")~ "chien-lapin",
studio_project_name== "LearnMix-36"& media_name %in%
c("EN_Single_DogWalem_R.wmv", "EN_Single_BunnyWalem_L.wmv","EN_Single_DogTeelo_L.wmv", "EN_Single_BunnyTeelo_R.wmv")
~ "dog-bunny",
studio_project_name== "LearnMix-36"& media_name %in%
c("FR_Single_LapinTeelo_L.wmv", "FR_Single_PoissonTeelo_L.wmv","FR_Single_PoissonWalem_R.wmv", "FR_Single_LapinWalem_R.wmv")
~ "poisson-lapin",
studio_project_name== "LearnMix-36"& media_name %in%
c("EN_Single_BunnyTeelo_L.wmv", "EN_Single_FishTeelo_L.wmv","EN_Single_FishWalem_R.wmv", "EN_Single_BunnyWalem_R.wmv")
~ "fish-bunny",
studio_project_name== "LearnMix-36"& media_name %in% c( "FR_Single_ChienWalem_L.wmv","FR_Single_PoissonWalem_L.wmv","FR_Single_PoissonTeelo_R.wmv", "FR_Single_ChienTeelo_R.wmv")
~ "poisson-chien",
studio_project_name== "LearnMix-36"& media_name %in% c( "EN_Single_FishWalem_L.wmv",
"EN_Single_DogWalem_L.wmv","EN_Single_FishTeelo_R.wmv", "EN_Single_DogTeelo_R.wmv")
~ "fish-dog",
grepl("banC|girC", media_name) & studio_project_name== "CogMisp-24"  ~"banana-giraffe",
grepl("monC|butC", media_name) & studio_project_name=="CogMisp-24" ~"monkey-butterfly",
grepl("winC|mouC", media_name) & studio_project_name== "CogMisp-24" ~"window-mouth",
grepl("pizC|tabC", media_name) & studio_project_name== "CogMisp-24" ~"pizza-table",
grepl("choC|bowC", media_name) & studio_project_name== "CogMisp-24" ~"chocolate-bowl",
grepl("fooC|cooC", media_name) & studio_project_name== "CogMisp-24"~"cookie-foot",
grepl("Toothbrush|Apple", media_name) & studio_project_name %in% c("Mix-20","Mix-14")  ~"toothbrush-apple",
grepl("Ear|Spoon", media_name) & studio_project_name %in% c("Mix-20","Mix-14")  ~"ear-spoon",
grepl("Mouth|Door", media_name) & studio_project_name %in% c("Mix-20","Mix-14")  ~"mouth-door",
grepl("Bird|Hand", media_name) & studio_project_name %in% c("Mix-20","Mix-14")  ~"bird-hand",
grepl("Dog|Book", media_name) & studio_project_name %in% c("Mix-20","Mix-14")  ~"dog-book",
grepl("Cookie|Foot", media_name) & studio_project_name %in% c("Mix-20","Mix-14") ~"cookie-foot",
grepl("Brosse|Pomme", media_name) & studio_project_name %in% c("Mix-20","Mix-14")  ~"pomme-brosse a dents",
grepl("Oreille|Cuillere", media_name) & studio_project_name %in% c("Mix-20","Mix-14")  ~"oreille-cuillere",
grepl("Bouche|Porte", media_name) & studio_project_name %in% c("Mix-20","Mix-14")  ~"bouche-porte",
grepl("Hand|Main", media_name) & studio_project_name %in% c("Mix-20","Mix-14")  ~"oisseau-main",
grepl("Chien|Livre", media_name) & studio_project_name %in% c("Mix-20","Mix-14")  ~"chien-livre",
grepl("Biscuit|Pied", media_name) & studio_project_name %in% c("Mix-20","Mix-14") ~"biscuit-pied",
TRUE~"OTHER"
)
)
#Adding a column with word tested information
kbh_w_items<- kbh_w_items %>%
mutate(target_word= case_when(
grepl("monC", media_name) ~"monkey",
grepl("butC", media_name) ~"butterfly",
grepl("Door", media_name) & grepl("Mix", studio_project_name) & grepl("Eng|ENG", media_name) ~"door",
grepl("banC", media_name) ~"banana",
grepl("winC", media_name) ~"window",
grepl("pizC", media_name) ~"pizza",
grepl("fooC", media_name) ~"foot",
grepl("bowC", media_name) ~"bowl",
grepl("choC", media_name) ~"chocolate",
grepl("girC", media_name) ~"giraffe",
grepl("tabC", media_name) ~"table",
grepl("Oreille", media_name)  & grepl("Mix", studio_project_name) ~"oreille",
grepl("Cuillere", media_name)  & grepl("Mix", studio_project_name) ~"cuillere",
grepl("Chien", media_name)  & grepl("Mix", studio_project_name) ~"chien",
grepl("Biscuit", media_name)  & grepl("Mix", studio_project_name) ~"biscuit",
grepl("Bouche", media_name)  & grepl("Mix", studio_project_name)  ~"bouche",
grepl("Livre", media_name) & grepl("Mix", studio_project_name) ~"livre",
grepl("Pied", media_name)  & grepl("Mix", studio_project_name) ~"pied",
grepl("Oisseau", media_name)  & grepl("Mix", studio_project_name) ~"oisseau",
grepl("Main", media_name)  & grepl("Mix", studio_project_name) ~"main",
grepl("Porte", media_name)  & grepl("Mix", studio_project_name) ~"porte",
grepl("Brosse", media_name)  & grepl("Mix", studio_project_name) ~"brosse a dents",
grepl("Pomme", media_name)  & grepl("Mix", studio_project_name) ~"pomme",
grepl("Poisson", media_name)  & grepl("Mix", studio_project_name) ~"poisson",
grepl("Lapin", media_name)  & grepl("Mix", studio_project_name) ~"lapin",
grepl("Ear_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "oreille",
grepl("Spoon_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "cuillere",
grepl("Apple_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "pomme",
grepl("Toothbrush_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "brosse a dents",
grepl("Fish_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "poisson",
grepl("Duck_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "canard",
grepl("Monkey_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "singe",
grepl("Sheep_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "mouton",
grepl("Dog_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "chien",
grepl("Book_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "livre",
grepl("Cookie_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "biscuit",
grepl("Foot_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "pied",
grepl("Hand_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "main",
grepl("Door_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "porte",
grepl("Pencil_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "crayon",
grepl("Coat_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "manteau",
grepl("Froggy_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "grenouille",
grepl("Cow_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "vache",
grepl("Bunny_Fr", media_name) & studio_project_name== "CompMix-36" & grepl("F", studio_test_name) ~ "lapin",
grepl("Ear", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "ear",
grepl("Spoon", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "spoon",
grepl("Apple", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "apple",
grepl("Toothbrush", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "toothbrush",
grepl("Fish", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "fish",
grepl("Duck", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "duck",
grepl("Monkey", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "monkey",
grepl("Sheep", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "sheep",
grepl("Dog", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "dog",
grepl("Book", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "book",
grepl("Cookie", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "cookie",
grepl("Foot", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "foot",
grepl("Hand", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "hand",
grepl("Door", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "door",
grepl("Pencil", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "pencil",
grepl("Coat", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "coat",
grepl("Froggy", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "froggy",
grepl("Cow", media_name) & studio_project_name== "CompMix-36" & grepl("E", studio_test_name) ~ "cow",
grepl("Ear", media_name) & grepl("Mix", studio_project_name) ~"ear",
grepl("Spoon", media_name)  & grepl("Mix", studio_project_name) ~"spoon",
grepl("Dog", media_name)  & grepl("Mix", studio_project_name) ~"dog",
grepl("Cookie", media_name)  & grepl("Mix", studio_project_name)~"cookie",
grepl("cooC", media_name) ~"cookie",
grepl("Mouth", media_name)  & grepl("Mix", studio_project_name)~"mouth",
grepl("mouC", media_name) ~"mouth",
grepl("Book", media_name)  & grepl("Mix", studio_project_name) ~"book",
grepl("Foot", media_name)  & grepl("Mix", studio_project_name) ~"foot",
grepl("fooC", media_name) ~"foot",
grepl("Bird", media_name)  & grepl("Mix", studio_project_name) ~"bird",
grepl("Hand", media_name)  & grepl("Mix", studio_project_name) ~"hand",
grepl("Toothbrush", media_name)   & grepl("Mix", studio_project_name) ~"toothbrush",
grepl("Apple", media_name)  & grepl("Mix", studio_project_name) ~"apple",
grepl("Fish", media_name)  & grepl("Mix", studio_project_name) ~"fish",
grepl("Bunny", media_name)  & grepl("Mix", studio_project_name) ~"bunny",
studio_project_name== "LearnMix-36"& media_name %in%
c("FR_Single_ChienWalem_R.wmv", "FR_Single_ChienTeelo_L.wmv", "FR_Single_ChienWalem_L.wmv","FR_Single_ChienTeelo_R.wmv")~ "chien",
studio_project_name== "LearnMix-36"& media_name %in%
c("FR_Single_LapinWalem_L.wmv", "FR_Single_LapinTeelo_R.wmv", "FR_Single_LapinTeelo_L.wmv","FR_Single_LapinWalem_R.wmv")~ "lapin",
studio_project_name== "LearnMix-36"& media_name %in%
c("EN_Single_DogWalem_R.wmv","EN_Single_DogTeelo_L.wmv", "EN_Single_DogWalem_L.wmv","EN_Single_DogTeelo_R.wmv")
~ "dog",
studio_project_name== "LearnMix-36"& media_name %in%
c("EN_Single_BunnyWalem_L.wmv", "EN_Single_BunnyTeelo_R.wmv", "EN_Single_BunnyTeelo_L.wmv", "EN_Single_BunnyWalem_R.wmv")
~ "bunny",
studio_project_name== "LearnMix-36"& media_name %in%
c("FR_Single_PoissonTeelo_L.wmv","FR_Single_PoissonWalem_R.wmv", "FR_Single_PoissonWalem_L.wmv","FR_Single_PoissonTeelo_R.wmv")
~ "poisson",
studio_project_name== "LearnMix-36"& media_name %in%
c("EN_Single_FishTeelo_L.wmv","EN_Single_FishWalem_R.wmv","EN_Single_FishWalem_L.wmv",
"EN_Single_FishTeelo_R.wmv")
~ "fish",
TRUE~"OTHER"
),
distractor_word = str_remove(yoked_pair, target_word),
distractor_word = str_remove(distractor_word, "-")
)
###### First, create variables that will be useful for the calculations below ## TRY TO DO IT IN THE SAME DATA SET
initial_looks <- kbh_w_items %>%
filter(noun_onset >= 260 & noun_onset < 360) %>%
group_by(recording_name)%>% #, trial_number, media_name) %>%
summarise(
distractor_count = sum(distractor),
target_count = sum(target),
trackloss_count = sum(trackloss)
)%>%
mutate(initial_look = case_when(target_count >0 ~ "target", #if the child *ever* looks to target during first 100 ms, then counted as initial target look
distractor_count/(distractor_count+trackloss_count) >=0.5 ~ "distractor",
TRUE ~ "neither"))
View(initial_looks)
###### First, create variables that will be useful for the calculations below ## TRY TO DO IT IN THE SAME DATA SET
initial_looks <- kbh_w_items %>%
filter(noun_onset >= 260 & noun_onset < 360) %>%
group_by(recording_name, trial_number, media_name) %>%
summarise(
distractor_count = sum(distractor),
target_count = sum(target),
trackloss_count = sum(trackloss)
)%>%
mutate(initial_look = case_when(target_count >0 ~ "target", #if the child *ever* looks to target during first 100 ms, then counted as initial target look
distractor_count/(distractor_count+trackloss_count) >=0.5 ~ "distractor",
TRUE ~ "neither"))
kbh_w_items <- left_join(kbh_w_items, initial_looks, by= c("recording_name", "trial_number", "media_name"))
kbh_w_items <- kbh_w_items %>%
filter(!(recording_name == "Mix_20_S52" & trial_number > 1))
prop_looking <- kbh_w_items %>%
filter(noun_onset>= 360 & noun_onset <= 3000)%>%
group_by(recording_name, subject_id, #trial_number, media_name,
age_months, exp_to_target_lang)%>%
summarise(samples_target=sum(target, na.rm = T),
samples_distractor=sum(distractor, na.rm = T))%>%
mutate(prop_looking= samples_target/(samples_target + samples_distractor)) %>%
ungroup()
View(prop_looking)
prop_looking_diff <- kbh_w_items %>%
ungroup()%>%
filter(noun_onset>= 360 & noun_onset <= 3000)%>%
select(recording_name, recording_timestamp, target_word, distractor_word, target, distractor)%>%
pivot_longer(c(target_word, distractor_word), names_to = "word_type", values_to = "word") %>%
mutate(looking = case_when(word_type == "target_word" & target == TRUE ~ TRUE,
word_type == "distractor_word" & distractor == TRUE ~ TRUE,
TRUE ~ FALSE)) %>%
group_by(recording_name, word_type, word) %>%
#what percent of the time when x is target are kids looking at x, what percent of the time when x is distractor are kids looking at x
summarise(prop_looking = sum(looking == T)/n()) %>%
pivot_wider(names_from = "word_type", values_from = "prop_looking") %>%
filter(!is.na(target_word) & !is.na(distractor_word)) %>%
mutate(prop_looking_diff = target_word - distractor_word) %>%
select(recording_name, target_word = word, prop_looking_diff)
View(prop_looking_diff)
prop_looking_diff <- kbh_w_items %>%
ungroup()%>%
filter(noun_onset>= 360 & noun_onset <= 3000)%>%
select(recording_name, recording_timestamp, target_word, distractor_word, target, distractor)%>%
pivot_longer(c(target_word, distractor_word), names_to = "word_type", values_to = "word") %>%
mutate(looking = case_when(word_type == "target_word" & target == TRUE ~ TRUE,
word_type == "distractor_word" & distractor == TRUE ~ TRUE,
TRUE ~ FALSE)) %>%
group_by(recording_name, word_type, word) %>%
#what percent of the time when x is target are kids looking at x, what percent of the time when x is distractor are kids looking at x
summarise(prop_looking = sum(looking == T)/n()) %>%
pivot_wider(names_from = "word_type", values_from = "prop_looking") %>%
filter(!is.na(target_word) & !is.na(distractor_word)) %>%
mutate(prop_looking_diff = target_word - distractor_word) %>%
select(recording_name, target_word = word, prop_looking_diff) %>%
ungroup() %>%
group_by(recording_name) %>% #Calculating this variable by subject instead of by trial for the correlation matrix.
summarise(mean(prop_looking_diff))
View(prop_looking_diff)
sampling_fixations_total <- kbh_w_items %>%
ungroup() %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
group_by(recording_name, trial_number) %>%
mutate(trackloss_group_id = data.table::rleid(trackloss)) %>%
group_by(trackloss_group_id, recording_name, trial_number) %>%
mutate(num_consec_trackloss_rows = n()) %>%
ungroup() %>%
filter(trackloss == FALSE | (trackloss == TRUE & num_consec_trackloss_rows >= 2)) %>%
group_by(recording_name, trial_number) %>%
mutate(looking_stretch_id = data.table::rleid(target)) %>%
group_by(recording_name, trial_number, looking_stretch_id) %>%
mutate(row = row_number(),
multi_of_twelve = case_when(row %% 12 == 0 & target == TRUE ~ "fixation")) %>%
group_by(#trial_number, media_name keep this to calculate variable by trial instead of by subject.
recording_name, subject_id) %>%
summarise(number_sampling_fixations = sum(multi_of_twelve == "fixation", na.rm = T)) %>%
ungroup()
#For this one, stretches of same looks are counted as one fixation
fixations_total <- kbh_w_items %>%
ungroup() %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
group_by(recording_name, trial_number) %>%
mutate(trackloss_group_id = data.table::rleid(trackloss)) %>%
group_by(trackloss_group_id, recording_name, trial_number) %>%
mutate(num_consec_trackloss_rows = n()) %>%
ungroup() %>%
filter(trackloss == FALSE | (trackloss == TRUE & num_consec_trackloss_rows >= 2)) %>%
group_by(recording_name, trial_number) %>%
mutate(looking_stretch_id = data.table::rleid(target)) %>%
group_by(recording_name, trial_number, looking_stretch_id) %>%
#filter to fixations of at least 12 rows or ~ 200 ms
filter(n() >= 12) %>%
#filter to target fixations
filter(target == TRUE) %>%
group_by(#trial_number, media_name,
recording_name, subject_id) %>%
summarise(number_fixations = length(unique(looking_stretch_id))) %>%
ungroup()
View(fixations_total)
first_shift_target <- kbh_w_items %>%
ungroup() %>%
filter(noun_onset >= 360 & noun_onset <= 1800) %>% #Keeping the shorter window to be consistent with Fernald
#Grouping and summarizing to get by subject by trial flagging of whether there was switching or not.
group_by(recording_name, subject_id, trial_number, media_name, initial_look) %>%
summarise(target = sum(target, na.rm = T),
distractor =  sum(distractor, na.rm = T)) %>% #Counting how many looks to target and distractor by timeslice grouped by target or distractor initial trials.
ungroup() %>%
mutate(correct_shift = case_when(initial_look == "target" & distractor ==0 ~ TRUE,
initial_look == "distractor" & target >0 ~ TRUE,
TRUE~FALSE)) #Making a column to calculate correct shifts. We defined correct shift as never looking to the distractor on target initial trial, or switching to the taget on distractor initial trials
prop_shifts_distractor_initial <- first_shift_target %>%
filter(initial_look == "distractor") %>%
group_by(recording_name) %>%
summarise(prop_shift_distractor_initial = sum(correct_shift == TRUE)/n())
prop_shifts_target_initial <- first_shift_target %>%
filter(initial_look == "target") %>%
group_by(recording_name) %>%
summarise(prop_shift_target_initial = sum(correct_shift == TRUE)/n())
RT <- kbh_w_items %>%
ungroup() %>%
filter(noun_onset >= 360 & noun_onset <= 1800) %>% #Keeping the shorter window to be consistent with Fernald
#Grouping and summarizing to get by subject by trial flagging of whether there was switching or not.
filter(initial_look == "distractor") %>%
group_by(#trial_number, media_name, #run this to get calculation by trial instead of by subject
recording_name, subject_id,initial_look, target) %>%
slice_head() %>%
filter(target == TRUE) %>%
mutate(latency_to_switch = noun_onset - 360)
number_of_switches <- kbh_w_items %>%
ungroup() %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
#for this one, get rid of track loss rows
filter(trackloss == FALSE) %>%
group_by(recording_name, trial_number) %>%
mutate(looking_stretch_id = data.table::rleid(target)) %>%
group_by(recording_name, trial_number, looking_stretch_id) %>%
#keep stretches that are at least 200 ms or 12 rows
filter(n() >= 12) %>%
mutate(where_looking = case_when(target == TRUE ~ "target",
distractor == TRUE ~ "distractor",
TRUE ~ "neither")) %>%
filter(where_looking != "neither") %>%
distinct(recording_name, trial_number, looking_stretch_id, where_looking, media_name, subject_id) %>%
group_by(recording_name, trial_number) %>%
mutate(AOI_switches = case_when(lag(where_looking) == "target" & where_looking == "distractor" ~ 1,
lag(where_looking) == "distractor" & where_looking == "target" ~ 1)) %>%
group_by(#trial_number, media_name,
recording_name, subject_id) %>%
summarise(total_aoi_switches = sum(AOI_switches, na.rm = T)) %>%
ungroup()
mean_fixation_dur <- kbh_w_items %>%
filter(noun_onset>= 360 & noun_onset <= 3000)%>%
group_by(recording_name, trial_number) %>%
mutate(trackloss_group_id = data.table::rleid(trackloss)) %>%
group_by(trackloss_group_id, recording_name, trial_number) %>%
mutate(num_consec_trackloss_rows = n()) %>%
ungroup() %>%
filter(trackloss == FALSE | (trackloss == TRUE & num_consec_trackloss_rows >= 2)) %>%
group_by(recording_name, trial_number) %>%
mutate(looking_stretch_id = data.table::rleid(target)) %>%
group_by(recording_name, trial_number, looking_stretch_id) %>%
#filter to fixations of at least 12 rows or ~ 200 ms
filter(n() >= 12) %>%
filter(target == TRUE) %>%
group_by(recording_name, trial_number, media_name, looking_stretch_id) %>%
summarise(length_of_looks = n()) %>%
mutate(length_of_looks = length_of_looks*(1000/60)) %>%
group_by(#trial_number, media_name, #run this to make it by trial
recording_name) %>%
summarise(duration_of_look = mean(length_of_looks, na.rm = T)) %>%
ungroup()
#Peak dilation
peak_dilation <- pupil_dilation %>%
ungroup()%>%
group_by(#trial_number, media_name,
recording_name, pupil_period) %>%
summarise(peak_pupil = max(two_pupil_mean)) %>%
pivot_wider(names_from = pupil_period, values_from ="peak_pupil")%>%
mutate(peak_pupil_size_difference = post_onset - baseline) %>% #difference in peak pupil points
filter(!is.na(peak_pupil_size_difference)) %>%
rename(max_pupil_baseline = baseline,
max_pupil_post_onset = post_onset)
pupil_dilation <- kbh_w_items %>%
ungroup() %>%
filter(noun_onset>= -200 & noun_onset <= 500)%>%
mutate(pupil_period = case_when(noun_onset >= -200 & noun_onset <= 0 ~ "baseline",
TRUE ~ "post_onset"))%>%
select(recording_timestamp, subject_id, recording_name, trial_number, media_name, pupil_period, pupil_right, pupil_left) %>%
mutate(two_pupil_mean = case_when(is.na(pupil_left) & is.na(pupil_right) ~ NA,
is.na(pupil_left)  ~ pupil_right,
is.na(pupil_right) ~ pupil_left,
TRUE ~ (pupil_left + pupil_right)/2)) %>%
filter(!is.na(two_pupil_mean))
#Peak dilation
peak_dilation <- pupil_dilation %>%
ungroup()%>%
group_by(#trial_number, media_name,
recording_name, pupil_period) %>%
summarise(peak_pupil = max(two_pupil_mean)) %>%
pivot_wider(names_from = pupil_period, values_from ="peak_pupil")%>%
mutate(peak_pupil_size_difference = post_onset - baseline) %>% #difference in peak pupil points
filter(!is.na(peak_pupil_size_difference)) %>%
rename(max_pupil_baseline = baseline,
max_pupil_post_onset = post_onset)
#Mean dilation
mean_dilation <- pupil_dilation %>%
ungroup()%>%
group_by(#trial_number, media_name,
recording_name, pupil_period) %>%
summarise(mean_pupil = mean(two_pupil_mean, na.rm = T)) %>%
pivot_wider(names_from = pupil_period, values_from ="mean_pupil")%>%
mutate(mean_pupil_size_difference = post_onset - baseline) %>% #difference in peak pupil points
filter(!is.na(mean_pupil_size_difference)) %>%
rename(mean_pupil_baseline = baseline,
mean_pupil_post_onset = post_onset)
#peak latency
peak_pupil_latency <- pupil_dilation %>%
ungroup()%>%
group_by(#trial_number, media_name,
recording_name,pupil_period) %>%
slice(which.max(two_pupil_mean)) %>%
select(recording_name, media_name, pupil_period, peak_time_stamp = recording_timestamp) %>%
group_by(recording_name, trial_number, media_name) %>%
summarise(peak_pupil_latency = diff(peak_time_stamp))
#peak latency
peak_pupil_latency <- pupil_dilation %>%
ungroup()%>%
group_by(#trial_number, media_name,
recording_name,pupil_period) %>%
slice(which.max(two_pupil_mean)) %>%
select(recording_name, media_name, pupil_period, peak_time_stamp = recording_timestamp) %>%
group_by(#trial_number, media_name,
recording_name) %>%
summarise(peak_pupil_latency = diff(peak_time_stamp))
first_look_duration <- kbh_w_items %>%
ungroup() %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
group_by(recording_name, trial_number) %>%
mutate(looking_stretch_id = data.table::rleid(target)) %>%
group_by(recording_name, trial_number, looking_stretch_id) %>%
mutate(row = row_number()) %>%
mutate(where_looking = case_when(target == TRUE ~ "target",
distractor == TRUE ~ "distractor",
TRUE ~ "neither")) %>%
filter(where_looking == "target") %>%
mutate(first_look_dur = max(row_number())*(1000/60)) %>%
filter(first_look_dur >= 200) %>%
group_by(#trial_number,
recording_name) %>%
filter(looking_stretch_id == min(looking_stretch_id)) %>%
ungroup() %>%
distinct(recording_name, trial_number, media_name, first_look_dur)
data_new_dvs <- kbh_w_items %>%
distinct(recording_name, media_name, age_months, exp_to_target_lang , target_word, yoked_pair) %>%
left_join(prop_looking %>% select(-subject_id, -samples_target, -samples_distractor)) %>%
#double check if kids see the same word more than once... if so, this item will be ducplicated in the dataset
left_join(prop_looking_diff) %>%
left_join(sampling_fixations_total %>% select(-subject_id)) %>%
left_join(fixations_total %>% select(-subject_id)) %>%
left_join(prop_shifts_distractor_initial) %>%
left_join(prop_shifts_target_initial) %>%
left_join(RT %>% ungroup() %>% select(recording_name, trial_number, latency_to_switch)) %>%
left_join(number_of_switches %>% select(-subject_id)) %>%
left_join(mean_fixation_dur) %>%
left_join(peak_dilation %>% select(-contains("max"))) %>%
left_join(mean_dilation %>% select(-mean_pupil_baseline, -mean_pupil_post_onset)) %>%
left_join(peak_pupil_latency) %>%
left_join(first_look_duration) %>%
ungroup()
#PEARSON CORRELATION
for_correlation<- data_new_dvs %>%
select(where(is.numeric)) %>%
select(-trial_number)
kbh_correlation <- cor(x=for_correlation, use="pairwise.complete.obs")
#plotting the correlation
corrplot(kbh_correlation, method='square')
#PEARSON CORRELATION
for_correlation<- data_new_dvs %>%
select(where(is.numeric)) %>%
select(- c(trial_number, fre_exp, eng_exp))
#plotting the correlation
corrplot(kbh_correlation, method='square')
kbh_correlation <- cor(x=for_correlation, use="pairwise.complete.obs")
#plotting the correlation
corrplot(kbh_correlation, method='square')
#plotting the correlation
corrplot(kbh_correlation)
corrplot(kbh_correlation, method='pie')
#plotting the correlation
corrplot(kbh_correlation)
