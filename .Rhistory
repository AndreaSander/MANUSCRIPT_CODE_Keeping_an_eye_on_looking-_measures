#we defined fixations as the number of consecutive runs within a trial where looks were in the target for at least 200ms while getting rid of short bouts of trackloss (17 to 38 ms)
# Group by subject and summarize consecutive TRUE values in target column - we are counting how many consecutive groups of 12 rows of TRUE target looks there are per trial, which is around 200 ms of looking. We are counting each group of 200 ms of looking as one fixation.
sampling_quadrants <- tibble(x_min = c(0, 481, 0, 481, 961, 1441, 961, 1441),
x_max = c(480, 960, 480, 960, 1440, 1920, 1440, 1920),
y_min = c(0, 0, 541, 541, 0, 0, 541, 541),
y_max = c(540, 540, 1080, 1080, 540, 540, 1080, 1080),
sampling_quadrant = c(1, 2, 3, 4, 1, 2, 3, 4))
sampling_fixations_total <- analysis_dataset %>%
ungroup() %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
#create sampling quadrants
mutate(sampling_quadrant = case_when(gaze_point_x > 0 & gaze_point_x <=480 & gaze_point_y > 0 & gaze_point_y <= 540 ~ 1,
gaze_point_x >= 481 & gaze_point_x <=960 & gaze_point_y > 0 & gaze_point_y <= 540 ~ 2,
gaze_point_x > 0 & gaze_point_x <=480 & gaze_point_y >= 541 & gaze_point_y <= 1080 ~ 3,
gaze_point_x >= 481 & gaze_point_x <=960 & gaze_point_y >= 541 & gaze_point_y <= 1080 ~ 4,
gaze_point_x >= 961 & gaze_point_x <=1440 & gaze_point_y > 0 & gaze_point_y <= 540 ~ 5,
gaze_point_x >= 1441 & gaze_point_x <=1920 & gaze_point_y > 0 & gaze_point_y <= 540 ~ 6,
gaze_point_x >= 961 & gaze_point_x <=1440 & gaze_point_y >= 541 & gaze_point_y <= 1080 ~ 7,
gaze_point_x >= 1441 & gaze_point_x <=1920 & gaze_point_y >= 541 & gaze_point_y <= 1080 ~ 8)) %>%
group_by(recording_name, trial_number) %>%
#come back to this.... current idea is to check if coordinates are within 20 px of each other and count those as a cluster
mutate(cluster_id = case_when(row_number() == 1 ~ 1,
(gaze_point_x <= lag(gaze_point_x) + 20 | gaze_point_x >= lag(gaze_point_x) + 20) & (gaze_point_y <= lag(gaze_point_y) + 20 | gaze_point_y >= lag(gaze_point_y) + 20)) ~ max(cluster_id, na.rm = T),
TRUE ~ max(cluster_id, na.rm = T) + 1)
#For this one, stretches of same looks are counted as one fixation
fixations_total_by_trial <- analysis_dataset %>%
ungroup() %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
group_by(recording_name, trial_number) %>%
mutate(trackloss_group_id = data.table::rleid(trackloss)) %>%
group_by(trackloss_group_id, recording_name, trial_number) %>%
mutate(num_consec_trackloss_rows = n()) %>%
ungroup() %>%
filter(trackloss == FALSE | (trackloss == TRUE & num_consec_trackloss_rows >= 2)) %>%
group_by(recording_name, trial_number) %>%
mutate(looking_stretch_id = data.table::rleid(target)) %>%
group_by(recording_name, trial_number, looking_stretch_id) %>%
#filter to fixations of at least 12 rows or ~ 200 ms
filter(n() >= 12) %>%
#filter to target fixations
filter(target == TRUE) %>%
distinct(recording_name, trial_number, looking_stretch_id) %>%
group_by(recording_name, trial_number) %>%
summarise(number_fixations = n()) %>%
ungroup()
fixations_total_by_subject <- fixations_total_by_trial %>%
group_by(recording_name) %>%
summarise(number_fixations = sum(number_fixations)) %>%
ungroup()
first_shift_target <- analysis_dataset %>%
ungroup() %>%
filter(noun_onset >= 360 & noun_onset <= 1800) %>% #Keeping the shorter window to be consistent with Fernald
#Grouping and summarizing to get by subject by trial flagging of whether there was switching or not.
group_by(recording_name, subject_id, trial_number, media_name, initial_look) %>%
summarise(target = sum(target, na.rm = T),
distractor =  sum(distractor, na.rm = T)) %>% #Counting how many looks to target and distractor by timeslice grouped by target or distractor initial trials.
ungroup() %>%
mutate(correct_shift = case_when(initial_look == "target" & distractor ==0 ~ TRUE,
initial_look == "distractor" & target >0 ~ TRUE,
TRUE~FALSE)) #Making a column to calculate correct shifts. We defined correct shift as never looking to the distractor on target initial trial, or switching to the taget on distractor initial trials
prop_shifts_distractor_initial_by_subject <- prop_shifts_distractor_initial_by_trial %>%
group_by(recording_name) %>%
summarise(prop_shift_distractor_initial = sum(correct_shift == TRUE)/n())
prop_shifts_distractor_initial_by_trial <- first_shift_target %>%
filter(initial_look == "distractor")
prop_shifts_distractor_initial_by_subject <- prop_shifts_distractor_initial_by_trial %>%
group_by(recording_name) %>%
summarise(prop_shift_distractor_initial = sum(correct_shift == TRUE)/n())
prop_shifts_target_initial_by_trial <- first_shift_target %>%
filter(initial_look == "target")
prop_shifts_target_initial_by_subject <- prop_shifts_target_initial_by_trial %>%
group_by(recording_name) %>%
summarise(prop_shift_target_initial = sum(correct_shift == TRUE)/n())
RT_by_trial <- analysis_dataset %>%
ungroup() %>%
filter(noun_onset >= 360 & noun_onset <= 1800) %>% #Keeping the shorter window to be consistent with Fernald
#Grouping and summarizing to get by subject by trial flagging of whether there was switching or not.
filter(initial_look == "distractor") %>%
filter(target == TRUE) %>%
group_by(trial_number, media_name, recording_name, subject_id, initial_look, target) %>%
slice_head() %>%
mutate(latency_to_switch = noun_onset - 360) %>%
ungroup() %>%
select(recording_name, trial_number, latency_to_switch)
RT_by_subject <- RT_by_trial %>%
group_by(recording_name) %>%
summarise(mean_RT = mean(latency_to_switch, na.rm = T)) %>%
ungroup()
number_of_switches_by_trial <- analysis_dataset %>%
ungroup() %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
#for this one, get rid of track loss rows
filter(trackloss == FALSE) %>%
group_by(recording_name, trial_number) %>%
mutate(looking_stretch_id = data.table::rleid(target)) %>%
group_by(recording_name, trial_number, looking_stretch_id) %>%
#keep stretches that are at least 200 ms or 12 rows
filter(n() >= 12) %>%
mutate(where_looking = case_when(target == TRUE ~ "target",
distractor == TRUE ~ "distractor",
TRUE ~ "neither")) %>%
filter(where_looking != "neither") %>%
distinct(recording_name, trial_number, looking_stretch_id, where_looking, media_name, subject_id) %>%
group_by(recording_name, trial_number) %>%
mutate(AOI_switches = case_when(lag(where_looking) == "target" & where_looking == "distractor" ~ 1,
lag(where_looking) == "distractor" & where_looking == "target" ~ 1)) %>%
group_by(recording_name, trial_number) %>%
summarise(total_aoi_switches = sum(AOI_switches, na.rm = T)) %>%
ungroup()
number_of_switches_by_trial <- analysis_dataset %>%
ungroup() %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
#for this one, get rid of track loss rows
filter(trackloss == FALSE) %>%
group_by(recording_name, trial_number) %>%
mutate(looking_stretch_id = data.table::rleid(target)) %>%
group_by(recording_name, trial_number, looking_stretch_id) %>%
#keep stretches that are at least 200 ms or 12 rows
filter(n() >= 12) %>%
mutate(where_looking = case_when(target == TRUE ~ "target",
distractor == TRUE ~ "distractor",
TRUE ~ "neither")) %>%
filter(where_looking != "neither") %>%
distinct(recording_name, trial_number, looking_stretch_id, where_looking, media_name, subject_id) %>%
group_by(recording_name, trial_number) %>%
mutate(AOI_switches = case_when(lag(where_looking) == "target" & where_looking == "distractor" ~ 1,
lag(where_looking) == "distractor" & where_looking == "target" ~ 1)) %>%
group_by(recording_name, trial_number) %>%
summarise(total_aoi_switches = sum(AOI_switches, na.rm = T)) %>%
ungroup()
number_of_switches_by_subject <- number_of_switches_by_trial %>%
group_by(recording_name) %>%
summarise(total_aoi_switches = sum(total_aoi_switches, na.rm = T)) %>%
ungroup()
mean_fixation_dur_by_trial <- analysis_dataset %>%
filter(noun_onset>= 360 & noun_onset <= 3000)%>%
group_by(recording_name, trial_number) %>%
mutate(trackloss_group_id = data.table::rleid(trackloss)) %>%
group_by(trackloss_group_id, recording_name, trial_number) %>%
mutate(num_consec_trackloss_rows = n()) %>%
ungroup() %>%
filter(trackloss == FALSE | (trackloss == TRUE & num_consec_trackloss_rows >= 2)) %>%
group_by(recording_name, trial_number) %>%
mutate(looking_stretch_id = data.table::rleid(target)) %>%
group_by(recording_name, trial_number, looking_stretch_id) %>%
#filter to fixations of at least 12 rows or ~ 200 ms
filter(n() >= 12) %>%
filter(target == TRUE) %>%
group_by(recording_name, trial_number, media_name, looking_stretch_id) %>%
summarise(length_of_looks = n()) %>%
mutate(duration_of_look = length_of_looks*(1000/60)) %>%
group_by(recording_name, trial_number) %>%
summarise(duration_of_look = mean(duration_of_look, na.rm = T)) %>%
ungroup()
mean_fixation_dur_by_subject <- mean_fixation_dur_by_trial %>%
group_by(recording_name) %>%
summarise(duration_of_look = mean(duration_of_look, na.rm = T)) %>%
ungroup()
divergence_point <- analysis_dataset %>%
filter(noun_onset>= -2000 & noun_onset <= 3000)%>%
#make timestamp that is offset by the time it takes to initiate a look, related to the noun onset
mutate(timestamp_zero_interest_period = noun_onset - 360) %>%
ungroup()%>%
group_by(recording_name, trial_number, media_name, age_months) %>%
#Need to align timestamps for each trial, so make the one closest to 0 equal zero and then add the eyetracker frame rate for each row
mutate(new_noun_onset = case_when(abs(noun_onset) == min(abs(noun_onset)) ~ 0)) %>%
select(recording_name, trial_number, recording_timestamp, trial_from_zero, noun_onset, new_noun_onset, target, distractor, trackloss, age_months) %>%
mutate(parallel_timestamp = (row_number() - which(new_noun_onset == 0))*(1000/60),
parallel_timestamp = round(parallel_timestamp)) %>%
select(media_name, recording_name, trial_number, parallel_timestamp, target, distractor, trackloss, age_months) %>%
pivot_longer(c(target, distractor), names_to = "aoi", values_to = "value") %>%
arrange(recording_name, trial_number, aoi, parallel_timestamp) %>%
mutate(value = as.numeric(value)) %>%
filter(trackloss == FALSE) %>%
ungroup() %>%
mutate(age_group = case_when(age_months >= 14 & age_months < 21 ~ "14-20",
age_months >= 21 & age_months < 31 ~ "21-30",
age_months >= 31 & age_months < 51 ~ "31-48"))
divergence_plot_data <- divergence_point %>%
group_by(recording_name, aoi, parallel_timestamp, age_group) %>%
summarise(mean_fixation = mean(value))
pupil_dilation <- analysis_dataset %>%
ungroup() %>%
filter(noun_onset>= -200 & noun_onset <= 500)%>%
mutate(pupil_period = case_when(noun_onset >= -200 & noun_onset <= 0 ~ "baseline",
TRUE ~ "post_onset"))%>%
select(recording_timestamp, subject_id, recording_name, trial_number, media_name, pupil_period, pupil_right, pupil_left) %>%
mutate(two_pupil_mean = case_when(is.na(pupil_left) & is.na(pupil_right) ~ NA,
is.na(pupil_left)  ~ pupil_right,
is.na(pupil_right) ~ pupil_left,
TRUE ~ (pupil_left + pupil_right)/2)) %>%
filter(!is.na(two_pupil_mean))
#Peak dilation
peak_dilation_by_trial <- pupil_dilation %>%
ungroup()%>%
group_by(trial_number, recording_name, pupil_period) %>%
summarise(peak_pupil = max(two_pupil_mean)) %>%
pivot_wider(names_from = pupil_period, values_from ="peak_pupil")%>%
mutate(peak_pupil_size_difference = post_onset - baseline) %>% #difference in peak pupil points
filter(!is.na(peak_pupil_size_difference)) %>%
rename(max_pupil_baseline = baseline,
max_pupil_post_onset = post_onset) %>%
ungroup()
peak_dilation_by_subject <- peak_dilation_by_trial %>%
group_by(recording_name) %>%
summarise(peak_pupil_size_difference = mean(peak_pupil_size_difference)) %>%
ungroup()
#Mean dilation
mean_dilation_by_trial <- pupil_dilation %>%
ungroup()%>%
group_by(trial_number, recording_name, pupil_period) %>%
summarise(mean_pupil = mean(two_pupil_mean, na.rm = T)) %>%
pivot_wider(names_from = pupil_period, values_from ="mean_pupil")%>%
mutate(mean_pupil_size_difference = post_onset - baseline) %>% #difference in peak pupil points
filter(!is.na(mean_pupil_size_difference)) %>%
rename(mean_pupil_baseline = baseline,
mean_pupil_post_onset = post_onset) %>%
ungroup()
mean_dilation_by_subject <- mean_dilation_by_trial %>%
group_by(recording_name) %>%
summarise(mean_pupil_size_difference = mean(mean_pupil_size_difference)) %>%
ungroup()
#peak latency
peak_pupil_latency_by_trial <- pupil_dilation %>%
ungroup()%>%
group_by(trial_number, recording_name, pupil_period) %>%
slice(which.max(two_pupil_mean)) %>%
select(recording_name, pupil_period, peak_time_stamp = recording_timestamp) %>%
group_by(trial_number, recording_name) %>%
summarise(peak_pupil_latency = diff(peak_time_stamp)) %>%
ungroup()
peak_pupil_latency_by_subject <- peak_pupil_latency_by_trial %>%
group_by(recording_name) %>%
summarise(peak_pupil_latency = mean(peak_pupil_latency))
first_look_duration_by_trial <- analysis_dataset %>%
ungroup() %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
group_by(recording_name, trial_number) %>%
mutate(looking_stretch_id = data.table::rleid(target)) %>%
group_by(recording_name, trial_number, looking_stretch_id) %>%
mutate(row = row_number()) %>%
mutate(where_looking = case_when(target == TRUE ~ "target",
distractor == TRUE ~ "distractor",
TRUE ~ "neither")) %>%
filter(where_looking == "target") %>%
mutate(first_look_dur = max(row_number())*(1000/60)) %>%
filter(first_look_dur >= 200) %>%
group_by(trial_number, recording_name) %>%
filter(looking_stretch_id == min(looking_stretch_id)) %>%
ungroup() %>%
distinct(recording_name, trial_number, media_name, first_look_dur) %>%
ungroup()
first_look_duration_by_trial <- analysis_dataset %>%
ungroup() %>%
filter(noun_onset >= 360 & noun_onset <= 3000) %>%
group_by(recording_name, trial_number) %>%
mutate(looking_stretch_id = data.table::rleid(target)) %>%
group_by(recording_name, trial_number, looking_stretch_id) %>%
mutate(row = row_number()) %>%
mutate(where_looking = case_when(target == TRUE ~ "target",
distractor == TRUE ~ "distractor",
TRUE ~ "neither")) %>%
filter(where_looking == "target") %>%
mutate(first_look_dur = max(row_number())*(1000/60)) %>%
filter(first_look_dur >= 200) %>%
group_by(trial_number, recording_name) %>%
filter(looking_stretch_id == min(looking_stretch_id)) %>%
ungroup() %>%
distinct(recording_name, trial_number, media_name, first_look_dur) %>%
ungroup()
first_look_duration_by_subject <- first_look_duration_by_trial %>%
group_by(recording_name) %>%
summarise(first_look_dur = mean(first_look_dur, na.rm = T)) %>%
ungroup()
data_new_dvs_by_trial <- analysis_dataset %>%
distinct(recording_name, trial_number, yoked_pair, target_word, age_months, exp_to_target_lang) %>%
left_join(prop_looking_by_trial) %>%
#double check if kids see the same word more than once... if so, this item will be ducplicated in the dataset
left_join(prop_looking_diff_by_item) %>%
# commenting out for now until we verify how to do this one left_join(sampling_fixations_total %>% select(-subject_id)) %>%
left_join(fixations_total_by_trial) %>%
left_join(prop_shifts_distractor_initial_by_trial) %>%
left_join(RT_by_trial) %>%
left_join(number_of_switches_by_trial) %>%
left_join(mean_fixation_dur_by_trial) %>%
left_join(peak_dilation_by_trial) %>%
left_join(mean_dilation_by_trial) %>%
left_join(peak_pupil_latency_by_trial) %>%
left_join(first_look_duration_by_trial) %>%
ungroup() %>%
mutate(exp_to_target_lang_centred = (exp_to_target_lang/100)-.5,
age_months_centred = age_months - 25,
correct_shift = case_when(correct_shift == T ~ 1,
correct_shift == F ~ 0))
data_new_dvs_by_subject <- analysis_dataset %>%
distinct(recording_name, age_months, exp_to_target_lang) %>%
left_join(prop_looking_by_subject) %>%
#double check if kids see the same word more than once... if so, this item will be ducplicated in the dataset
left_join(prop_looking_diff_by_subject) %>%
# commenting out for now until we verify how to do this one left_join(sampling_fixations_total %>% select(-subject_id)) %>%
left_join(fixations_total_by_subject) %>%
left_join(prop_shifts_distractor_initial_by_subject) %>%
left_join(RT_by_subject) %>%
left_join(number_of_switches_by_subject) %>%
left_join(mean_fixation_dur_by_subject) %>%
left_join(peak_dilation_by_subject) %>%
left_join(mean_dilation_by_subject) %>%
left_join(peak_pupil_latency_by_subject) %>%
left_join(first_look_duration_by_subject) %>%
ungroup()
#PEARSON CORRELATION
for_correlation<- data_new_dvs_by_subject %>%
select(where(is.numeric))
kbh_correlation <- cor(x=for_correlation, use="pairwise.complete.obs")
data_new_dvs_by_subject <- analysis_dataset %>%
distinct(recording_name, age_months, exp_to_target_lang) %>%
left_join(prop_looking_by_subject) %>%
#double check if kids see the same word more than once... if so, this item will be ducplicated in the dataset
left_join(prop_looking_diff_by_subject) %>%
# commenting out for now until we verify how to do this one left_join(sampling_fixations_total %>% select(-subject_id)) %>%
left_join(fixations_total_by_subject) %>%
left_join(prop_shifts_distractor_initial_by_subject) %>%
left_join(prop_shifts_target_initial_by_subject) %>%
left_join(RT_by_subject) %>%
left_join(number_of_switches_by_subject) %>%
left_join(mean_fixation_dur_by_subject) %>%
left_join(peak_dilation_by_subject) %>%
left_join(mean_dilation_by_subject) %>%
left_join(peak_pupil_latency_by_subject) %>%
left_join(first_look_duration_by_subject) %>%
ungroup()
#PEARSON CORRELATION
for_correlation<- data_new_dvs_by_subject %>%
select(where(is.numeric))
kbh_correlation <- cor(x=for_correlation, use="pairwise.complete.obs")
install.packages("psych")
library(psych)
View(for_correlation)
colnames(for_correlation)
for_factor_analysis<- for_correlation %>%
select(-c(age_months, exp_to_target_lang))
View(for_factor_analysis)
psych::fac(for_factor, nfactors = 12) %>% view()
psych::fac(for_factor_analysis, nfactors = 12) %>% view()
for_factor_analysis<- for_correlation %>%
select(-c(age_months, exp_to_target_lang)) %>%
as.matrix()
psych::fac(for_factor_analysis, nfactors = 12) %>% view()
psych::fac(for_factor_analysis, nfactors = 12)
psych::fac(for_factor_analysis, nfactors = 4)
psych::fac(for_factor_analysis, nfactors = 2)
psych::fac(for_factor_analysis, nfactors = 3)
psych::fac(for_factor_analysis, nfactors = 3)
psych::fac(for_factor_analysis, nfactors = 4)
psych::fac(for_factor_analysis, nfactors = 4)
psych::fac(for_factor_analysis, nfactors = 2)
psych::fac(for_factor_analysis, nfactors = 4)
psych::fac(for_factor_analysis, nfactors = 3)
#We are sticking with ss loads above 1 so that leaves us with 2 factors.
psych::fac(for_factor_analysis, nfactors = 2)
for_factor_analysis_noshift <- for_factor_analysis %>%
select(-c(prop_shift_distractor_initial, prop_shift_target_initial))
for_factor_analysis_noshift <- for_correlation %>%
select(-c(prop_shift_distractor_initial, prop_shift_target_initial, age_months, exp_to_target_lang)) %>%
as.matrix()
psych::fac(for_factor_analysis_noshift, nfactors = 10)
#Prop Looking Models
prop_looking_simple <- lm (prop_looking ~ age_months_centred + exp_to_target_lang_centred,
data = data_new_dvs_by_subject)
data_new_dvs_by_subject <- analysis_dataset %>%
distinct(recording_name, age_months, exp_to_target_lang) %>%
left_join(prop_looking_by_subject) %>%
#double check if kids see the same word more than once... if so, this item will be ducplicated in the dataset
left_join(prop_looking_diff_by_subject) %>%
# commenting out for now until we verify how to do this one left_join(sampling_fixations_total %>% select(-subject_id)) %>%
left_join(fixations_total_by_subject) %>%
left_join(prop_shifts_distractor_initial_by_subject) %>%
left_join(prop_shifts_target_initial_by_subject) %>%
left_join(RT_by_subject) %>%
left_join(number_of_switches_by_subject) %>%
left_join(mean_fixation_dur_by_subject) %>%
left_join(peak_dilation_by_subject) %>%
left_join(mean_dilation_by_subject) %>%
left_join(peak_pupil_latency_by_subject) %>%
left_join(first_look_duration_by_subject) %>%
ungroup()%>%
mutate(exp_to_target_lang_centred = (exp_to_target_lang/100)-.5,
age_months_centred = age_months - 25)
#Prop Looking Models
prop_looking_simple <- lm (prop_looking ~ age_months_centred + exp_to_target_lang_centred,
data = data_new_dvs_by_subject)
prop_looking_interaction <- lm (prop_looking ~ age_months_centred*exp_to_target_lang_centred,
data = data_new_dvs_by_subject)
#Prop Looking Diff Models
prop_looking_diff_simple <- lm (prop_looking_diff ~ age_months_centred + exp_to_target_lang_centred,
data = data_new_dvs_by_subject)
prop_looking_diff_interaction <- lm (prop_looking_diff ~ age_months_centred*exp_to_target_lang_centred,
data = data_new_dvs_by_subject)
#Number fixations Models
number_fixations_simple <- lm (number_fixations ~ age_months_centred + exp_to_target_lang_centred,
data = data_new_dvs_by_subject)
number_fixations_interaction <- lm (number_fixations ~ age_months_centred*exp_to_target_lang_centred,
data = data_new_dvs_by_subject)
#Latency to switch Models
latency_to_switch_simple <- lm (latency_to_switch ~ age_months_centred + exp_to_target_lang_centred,
data = data_new_dvs_by_subject)
#Latency to switch Models
latency_to_switch_simple <- lm (RT_by_subject ~ age_months_centred + exp_to_target_lang_centred,
data = data_new_dvs_by_subject)
colnames(data_new_dvs_by_subject)
#Latency to switch Models
latency_to_switch_simple <- lm (mean_RT ~ age_months_centred + exp_to_target_lang_centred,
data = data_new_dvs_by_subject)
latency_to_switch_interaction <- lm (mean_RT ~ age_months_centred*exp_to_target_lang_centred,
data = data_new_dvs_by_subject)
#Number of AOI switches Models
aoi_switches_simple <- lm (total_aoi_switches ~ age_months_centred + exp_to_target_lang_centred,
data = data_new_dvs_by_subject)
aoi_switches_interaction <- lm (total_aoi_switches ~ age_months_centred*exp_to_target_lang_centred,
data = data_new_dvs_by_subject)
#Mean fixation duration Models
mean_fixation_dur_simple <- lm (duration_of_look ~ age_months_centred + exp_to_target_lang_centred,
data = data_new_dvs_by_subject)
mean_fixation_dur_interaction <- lm (duration_of_look ~ age_months_centred*exp_to_target_lang_centred,
data = data_new_dvs_by_subject)
#Peak pupil size Models
peak_pupil_simple <- lm (peak_pupil_size_difference ~ age_months_centred + exp_to_target_lang_centred,
data = data_new_dvs_by_subject)
peak_pupil_interaction <- lm (peak_pupil_size_difference ~ age_months_centred*exp_to_target_lang_centred,
data = data_new_dvs_by_subject)
#Mean pupil size Models
mean_pupil_simple <- lm (mean_pupil_size_difference ~ age_months_centred + exp_to_target_lang_centred,
data = data_new_dvs_by_subject)
mean_pupil_interaction <- lm (mean_pupil_size_difference ~ age_months_centred*exp_to_target_lang_centred,
data = data_new_dvs_by_subject)
#Peak pupil latency Models
peak_pupil_latency_simple <- lm (peak_pupil_latency ~ age_months_centred + exp_to_target_lang_centred,
data = data_new_dvs_by_subject)
peak_pupil_latency_interaction <- lm (peak_pupil_latency ~ age_months_centred*exp_to_target_lang_centred,
data = data_new_dvs_by_subject)
#First look duration Models
first_look_duration_simple <- lm (first_look_dur ~ age_months_centred + exp_to_target_lang_centred,
data = data_new_dvs_by_subject)
first_look_duration_interaction <- lm (first_look_dur ~ age_months_centred*exp_to_target_lang_centred,
data = data_new_dvs_by_subject)
target_stay_simple <-lm(prop_shift_target_initial ~ age_months_centred + exp_to_target_lang_centred,
data = data_new_dvs_by_subject)
target_stay_interaction<- lm(prop_shift_target_initial ~ age_months_centred + exp_to_target_lang_centred,
data = data_new_dvs_by_subject)
compare_performance(correct_shift_simple , peak_pupil_latency_simple, mean_pupil_simple, peak_pupil_simple,
mean_fixation_dur_simple , aoi_switches_simple, latency_to_switch_simple, prop_looking_diff_simple, number_fixations_simple, prop_looking_simple, target_stay_simple, correct_shift_simple)
library(lmerTest)
library(DHARMa)
library(performance)
compare_performance(correct_shift_simple , peak_pupil_latency_simple, mean_pupil_simple, peak_pupil_simple,
mean_fixation_dur_simple , aoi_switches_simple, latency_to_switch_simple, prop_looking_diff_simple, number_fixations_simple, prop_looking_simple, target_stay_simple, correct_shift_simple)
correct_shift_simple <- lm(prop_shift_distractor_initial ~ age_months_centred + exp_to_target_lang_centred,
data = data_new_dvs_by_subject)
correct_shift_interaction <- lm(prop_shift_distractor_initial ~ age_months_centred*exp_to_target_lang_centred,
data = data_new_dvs_by_subject)
compare_performance(correct_shift_simple , peak_pupil_latency_simple, mean_pupil_simple, peak_pupil_simple,
mean_fixation_dur_simple , aoi_switches_simple, latency_to_switch_simple, prop_looking_diff_simple, number_fixations_simple, prop_looking_simple, target_stay_simple, correct_shift_simple)
summary(target_stay_simple)
summary(target_stay_interaction)
target_stay_interaction<- lm(prop_shift_target_initial ~ age_months_centred * exp_to_target_lang_centred,
data = data_new_dvs_by_subject)
summary(target_stay_interaction)
summary(correct_shift_simple)
summary(correct_shift_interaction)
summary(prop_looking_simple)
summary(prop_looking_interaction)
summary(prop_looking_diff_simple)
summary(prop_looking_diff_interaction)
summary(number_fixations_simple)
summary(number_fixations_interaction)
summary(latency_to_switch_simple)
summary(latency_to_switch_interaction)
summary(aoi_switches_simple)
summary(aoi_switches_interaction)
library(QuantPsyc)
summary(aoi_switches_interaction)
install.packages("interactions")
library(interactions)
?interact_plot
interactions::interact_plot(aoi_switches_interaction, pred= age_months_centered, modx=exp_to_target_lang_centered, plot.points = T)
interactions::interact_plot(aoi_switches_interaction, pred= age_months_centred, modx=exp_to_target_lang_centred, plot.points = T)
colnames(data_new_dvs_by_subject)
aoi_switches_interaction2 <- lm (total_aoi_switches ~ age_months*exp_to_target_lang_centred,
data = data_new_dvs_by_subject)
interactions::interact_plot(aoi_switches_interaction2, pred= age_months, modx=exp_to_target_lang_centred, plot.points = T)
aoi_switches_interaction2 <- lm (total_aoi_switches ~ age_months_centred*exp_to_target_lang,
data = data_new_dvs_by_subject)
interactions::interact_plot(aoi_switches_interaction2, pred= exp_to_target_lang, modx=age_months_centred, plot.points = T)
summary(mean_fixation_dur_simple)
summary(mean_fixation_dur_interaction)
summary(peak_pupil_simple)
summary(peak_pupil_interaction)
summary(mean_pupil_simple)
summary(mean_pupil_interaction)
summary(peak_pupil_latency_simple)
summary(peak_pupil_latency_interaction)
summary(first_look_duration_simple)
summary(first_look_duration_interaction)
summary(correct_shift_simple)
summary(correct_shift_interaction)
summary(target_stay_simple)
target_stay_interaction<- lm(prop_shift_target_initial ~ age_months_centred * exp_to_target_lang_centred,
data = data_new_dvs_by_subject)
#We are sticking with ss loads above 1 so that leaves us with 2 factors.
psych::fac(for_factor_analysis, nfactors = 2)
compare_performance(correct_shift_simple , peak_pupil_latency_simple, mean_pupil_simple, peak_pupil_simple,
mean_fixation_dur_simple , aoi_switches_simple, latency_to_switch_simple, prop_looking_diff_simple, number_fixations_simple, prop_looking_simple, target_stay_simple, correct_shift_simple)
